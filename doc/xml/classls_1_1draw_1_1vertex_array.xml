<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classls_1_1draw_1_1vertex_array" kind="class" prot="public">
    <compoundname>ls::draw::vertexArray</compoundname>
    <includes refid="vertex_array_8h" local="no">vertexArray.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classls_1_1draw_1_1vertex_array_1ae747c598417e3b9a28b7f5fc17af7ba9" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ls::draw::vertexArray::vao</definition>
        <argsstring></argsstring>
        <name>vao</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A handle to the vertex array object residing on the GPU. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="27" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a4496decddf77c84bc6e737a64e30730d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::vertexArray::vertexArray</definition>
        <argsstring>()</argsstring>
        <name>vertexArray</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="33" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/vertexArray.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a7dd3e07c97411f22fde8d5d387dd2d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::vertexArray::vertexArray</definition>
        <argsstring>(const vertexArray &amp;)=delete</argsstring>
        <name>vertexArray</name>
        <param>
          <type>const <ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy Constructor - DELETED. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a5c5d5b6d7b4c3bd1ac46b72aa366abf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::vertexArray::vertexArray</definition>
        <argsstring>(vertexArray &amp;&amp;)</argsstring>
        <name>vertexArray</name>
        <param>
          <type><ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> &amp;&amp;</type>
          <defname>va</defname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This moves the data contained within the constructor parameter into *this. No copies are performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> object whose data will be moved into *this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="49" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/vertexArray.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1aa1f125b036284eb8051af86f6200f4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::vertexArray::~vertexArray</definition>
        <argsstring>()</argsstring>
        <name>~vertexArray</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Releases all resources used by *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="56" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/vertexArray.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a468b5d7e122ca6f291520544b5c46927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> &amp;</type>
        <definition>vertexArray&amp; ls::draw::vertexArray::operator=</definition>
        <argsstring>(const vertexArray &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy Operator - DELETED. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a79918dc8c6ae8df0e09f577dfc4431af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> &amp;</type>
        <definition>vertexArray &amp; ls::draw::vertexArray::operator=</definition>
        <argsstring>(vertexArray &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> &amp;&amp;</type>
          <defname>va</defname>
        </param>
        <briefdescription>
<para>Move Operator. </para>        </briefdescription>
        <detaileddescription>
<para>This moves the data contained within the method parameter into *this. No copies are performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classls_1_1draw_1_1vertex_array" kindref="compound">vertexArray</ref> object whose data will be moved into *this.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="74" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/vertexArray.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a0570c34181a69bda90becdced71c0b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ls::draw::vertexArray::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Array initialization. </para>        </briefdescription>
        <detaileddescription>
<para>Generates a vertex array object on the GPY that will be used to describe the memory layout of a data buffer.</para><para><simplesect kind="return"><para>true if the buffer was successfully created, false if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="84" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/vertexArray.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a20a5f920a2b0f85ec973185d7b4ebf0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminate the vertex array and release all of its resources back to the GPU. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="90" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1ab6a5c37798799d5ba908689815eac61b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ls::draw::vertexArray::isValid</definition>
        <argsstring>() const </argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if there is data used by this object</para><para><simplesect kind="return"><para>true if this object has data residing on GPU memory, false if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="98" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a0f73b91ee0fbf11d7a63f673a5aad4ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned ls::draw::vertexArray::getId</definition>
        <argsstring>() const </argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the GPU-assigned ID for this VAO</para><para><simplesect kind="return"><para>an unsigned integral type representing this VAO. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="105" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a2455a7154dd0a15476211954d42e2b60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::enableAttrib</definition>
        <argsstring>(int index)</argsstring>
        <name>enableAttrib</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable an attribute contained within the vertex array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The array-index to an attribute that is to be enabled. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="113" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1ac06024aa1d94c435cc3a25db09f858e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::disableAttrib</definition>
        <argsstring>(int index)</argsstring>
        <name>disableAttrib</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable an attribute contained in the array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The array-index to an attribute that is to be disabled. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="121" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1afbf48c160b9273f968d1e90e4ba2a953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::setAttribOffset</definition>
        <argsstring>(unsigned index, unsigned elementsPerVert, int type, bool normalize, int vertexOffset, const void *elementOffset)</argsstring>
        <name>setAttribOffset</name>
        <param>
          <type>unsigned</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>elementsPerVert</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vertexOffset</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>elementOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the memory layout/offset of an attribute in the vertex array. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The array attribute to be modified</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementsPerVert</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements contained within the vertex.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The openGL data type.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the data be normalized to a float?</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertexOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>An offset, in bytes, between each vertex in the array.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>A byte-offset from the start of each vertex. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="144" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="233" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a8175ed20e97024dd10c45057672fd352" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * ls::draw::vertexArray::getAttribOffset</definition>
        <argsstring>(int index) const </argsstring>
        <name>getAttribOffset</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the byte-offset to an element in the array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>An element&apos;s index in the array.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a byte-offset to the attribute requested. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="161" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a80cab00cd66351849ff81307d61bff75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::setAttribInstanceRate</definition>
        <argsstring>(int index, int instancesPerAttrib)</argsstring>
        <name>setAttribInstanceRate</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>instancesPerAttrib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the rate at which an attribute should repeat during instanced draw calls on the GPU.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute&apos;s index within the array.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>instancesPerAttrib</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of instances that should be drawn before repeating another render of the array attribute. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="174" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a6bc8c94458b79ff6fdc3caf11a3fa162" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::bind</definition>
        <argsstring>() const </argsstring>
        <name>bind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bind this vertex array to the current global rendering context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="179" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1vertex_array_1a1b50fa0e2c66659eaab487b8858bf9b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ls::draw::vertexArray::unbind</definition>
        <argsstring>() const </argsstring>
        <name>unbind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unbind this vertex array object from the current render context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="184" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="271" bodyend="273"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Vertex Array Object. </para>    </briefdescription>
    <detaileddescription>
<para>Represents a single VAO within OpenGL. VAO object store the state of multiple vertex buffer object attributes into one container. </para>    </detaileddescription>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" line="22" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/vertexArray.h" bodystart="22" bodyend="185"/>
    <listofallmembers>
      <member refid="classls_1_1draw_1_1vertex_array_1a6bc8c94458b79ff6fdc3caf11a3fa162" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>bind</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1ac06024aa1d94c435cc3a25db09f858e6" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>disableAttrib</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a2455a7154dd0a15476211954d42e2b60" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>enableAttrib</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a8175ed20e97024dd10c45057672fd352" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>getAttribOffset</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a0f73b91ee0fbf11d7a63f673a5aad4ad" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>getId</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a0570c34181a69bda90becdced71c0b07" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>init</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1ab6a5c37798799d5ba908689815eac61b" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>isValid</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a468b5d7e122ca6f291520544b5c46927" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>operator=</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a79918dc8c6ae8df0e09f577dfc4431af" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>operator=</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a80cab00cd66351849ff81307d61bff75" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>setAttribInstanceRate</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1afbf48c160b9273f968d1e90e4ba2a953" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>setAttribOffset</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a20a5f920a2b0f85ec973185d7b4ebf0d" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>terminate</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a1b50fa0e2c66659eaab487b8858bf9b1" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>unbind</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1ae747c598417e3b9a28b7f5fc17af7ba9" prot="private" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>vao</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a4496decddf77c84bc6e737a64e30730d" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>vertexArray</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a7dd3e07c97411f22fde8d5d387dd2d90" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>vertexArray</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1a5c5d5b6d7b4c3bd1ac46b72aa366abf3" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>vertexArray</name></member>
      <member refid="classls_1_1draw_1_1vertex_array_1aa1f125b036284eb8051af86f6200f4eb" prot="public" virt="non-virtual"><scope>ls::draw::vertexArray</scope><name>~vertexArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
