<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classls_1_1draw_1_1font_resource" kind="class" prot="public" final="yes">
    <compoundname>ls::draw::fontResource</compoundname>
    <basecompoundref refid="classls_1_1utils_1_1resource" prot="public" virt="non-virtual">ls::utils::resource</basecompoundref>
    <includes refid="font_resource_8h" local="no">fontResource.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classls_1_1draw_1_1font_resource_1a99aaba03b17b691957c5ba9cd856c901" prot="public" static="no">
        <name>@1</name>
        <enumvalue id="classls_1_1draw_1_1font_resource_1a99aaba03b17b691957c5ba9cd856c901ab4d00758058976c3805cbb6709df3f20" prot="public">
          <name>DEFAULT_FONT_SIZE</name>
          <initializer>= 72</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default font size (as DPI) of fonts loaded from a file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="55" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classls_1_1draw_1_1font_resource_1a7fdd398bc4fd09867932a112ae5a2e81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class atlas</definition>
        <argsstring></argsstring>
        <name>atlas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="48" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classls_1_1draw_1_1font_resource_1ab7c997042f8e6bea2279feff64eae443" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ls::draw::fontResource::numGlyphs</definition>
        <argsstring></argsstring>
        <name>numGlyphs</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of loaded glyphs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="63" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classls_1_1draw_1_1font_resource_1a55652fe017d5baf9e748829a54c9c477" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned ls::draw::fontResource::glyphSize</definition>
        <argsstring></argsstring>
        <name>glyphSize</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Contains the currently loaded font&apos;s glyph size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="68" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classls_1_1draw_1_1font_resource_1a191b155da3d8a1d6258eb1d0ffdf0edf" prot="private" static="no" mutable="no">
        <type>math::vec2i</type>
        <definition>math::vec2i ls::draw::fontResource::maxGlyphSize</definition>
        <argsstring></argsstring>
        <name>maxGlyphSize</name>
        <initializer>= {0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the largest glyph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="73" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1af3833cb3c11187f626dc27d70d4f82d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ls::draw::fontResource::loadGlyphs</definition>
        <argsstring>(FT_FaceRec_ *ftFace)</argsstring>
        <name>loadGlyphs</name>
        <param>
          <type>FT_FaceRec_ *</type>
          <declname>ftFace</declname>
        </param>
        <briefdescription>
<para>Internal loading function for all glyphs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftFace</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a FreeType font face array. This is used internally to convert True-Type font metrics into a bitmap which can be sent to OpenGL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if a font&apos;s glyphs were successfully loaded from a file by FreeType, FALSE if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="86" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="217" bodyend="283"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a97300e19efec27cdeb79168c8fa19a50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::fontResource::fontResource</definition>
        <argsstring>()</argsstring>
        <name>fontResource</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Initialized all variables to 0 values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="94" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a2d09893995ce86b7a9138f2aba65f9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::fontResource::fontResource</definition>
        <argsstring>(const fontResource &amp;)=delete</argsstring>
        <name>fontResource</name>
        <param>
          <type>const <ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy Constructor - DELETED </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1af8dc7ec3da52ed898637aaeb7406aa54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::draw::fontResource::fontResource</definition>
        <argsstring>(fontResource &amp;&amp;fr)</argsstring>
        <name>fontResource</name>
        <param>
          <type><ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> &amp;&amp;</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Attempts to move all resources from the input argument into *this. No deletions are made.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fr</parametername>
</parameternamelist>
<parameterdescription>
<para>An r-value reference to another <ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="109" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1aad21fad7713108c7f2c607210e6bcb36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ls::draw::fontResource::~fontResource</definition>
        <argsstring>() override</argsstring>
        <name>~fontResource</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Calls &quot;unload()&quot; and releases all memory used by *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="116" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a9857afe0094a822879e898a70d15ff08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> &amp;</type>
        <definition>fontResource&amp; ls::draw::fontResource::operator=</definition>
        <argsstring>(const fontResource &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy Operator - DELETED. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a8f6ef1b53150c37233850e88f53add35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> &amp;</type>
        <definition>fontResource &amp; ls::draw::fontResource::operator=</definition>
        <argsstring>(fontResource &amp;&amp;fr)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> &amp;&amp;</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
<para>Move Operator. </para>        </briefdescription>
        <detaileddescription>
<para>Attempts to move all resources from the input argument into *this. No copies are made.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fr</parametername>
</parameternamelist>
<parameterdescription>
<para>An r-value reference to another <ref refid="classls_1_1draw_1_1font_resource" kindref="compound">fontResource</ref> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="134" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="86" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a1c8412fe00c16f8265af89bcee0f0e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ls::draw::fontResource::loadFile</definition>
        <argsstring>(const std::string &amp;filename, unsigned pixelSize)</argsstring>
        <name>loadFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>pixelSize</declname>
        </param>
        <briefdescription>
<para>Load a font file. </para>        </briefdescription>
        <detaileddescription>
<para>This method will load a font file using a specified pixel size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A c-style string containing the relative path name to a file that should be loaded into memory.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pixelSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size, in pixels, that each glyph should be.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the font was successfully loaded. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="150" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="126" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a3e008830449d927274b61b5beddefd04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ls::draw::fontResource::loadFile</definition>
        <argsstring>(const std::wstring &amp;filename, unsigned pixelSize)</argsstring>
        <name>loadFile</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>pixelSize</declname>
        </param>
        <briefdescription>
<para>Load a font file. </para>        </briefdescription>
        <detaileddescription>
<para>This method will load a font file using a specified pixel size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A c-style string containing the relative path name to a file that should be loaded into memory.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pixelSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the size, in pixels, that each glyph should be.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the font was successfully loaded. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="166" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1ac0a8c50623e08de5adb403e0176a05c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ls::draw::fontResource::loadFile</definition>
        <argsstring>(const std::string &amp;filename) override</argsstring>
        <name>loadFile</name>
        <reimplements refid="classls_1_1utils_1_1resource_1abc6a808606df0e4ca912f228f2a41aa7">loadFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a font file. </para>        </briefdescription>
        <detaileddescription>
<para>This method will load a font file using the default font size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A c-style string containing the relative path name to a file that should be loaded into memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the font was successfully loaded. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="179" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a4ea643c3666bc0a0eaa50f31502a4c29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ls::draw::fontResource::loadFile</definition>
        <argsstring>(const std::wstring &amp;filename) override</argsstring>
        <name>loadFile</name>
        <reimplements refid="classls_1_1utils_1_1resource_1a982c2e94e4723d6d68153a4353c656f3">loadFile</reimplements>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a font file. </para>        </briefdescription>
        <detaileddescription>
<para>This method will load a font file using the default font size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A c-style string containing the relative path name to a file that should be loaded into memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the font was successfully loaded. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="192" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a399d865e1c2c42b84e293e6e1608df9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ls::draw::fontResource::saveFile</definition>
        <argsstring>(const std::string &amp;filename) const override</argsstring>
        <name>saveFile</name>
        <reimplements refid="classls_1_1utils_1_1resource_1ad07e11bc2ef3538a2444eb804114a2ef">saveFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Save a file. </para>        </briefdescription>
        <detaileddescription>
<para>This method will save a font to a file indicated by the specified path name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A string object containing the relative path name to a file that should be saved to the computer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file was successfully saved. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="206" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1ac44b470ddbecec262d9792a78508fb8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ls::draw::fontResource::unload</definition>
        <argsstring>() override</argsstring>
        <name>unload</name>
        <reimplements refid="classls_1_1utils_1_1resource_1ae7de856e2b33910059d2e81d548e57eb">unload</reimplements>
        <briefdescription>
<para>Unload. </para>        </briefdescription>
        <detaileddescription>
<para>Free all memory used by *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="213" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/fontResource.cpp" bodystart="110" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a4c08a4c6a0c84d75887416bd4905b7a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned ls::draw::fontResource::getFontSize</definition>
        <argsstring>() const </argsstring>
        <name>getFontSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the currently loaded fonts </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="218" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1aacdedfeaaec34fdf85e7f57adf3e4dda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structls_1_1draw_1_1glyph" kindref="compound">glyph</ref> *</type>
        <definition>const glyph * ls::draw::fontResource::getGlyphs</definition>
        <argsstring>() const </argsstring>
        <name>getGlyphs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the array of glyphs used by *this </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="223" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1ad80176cc0a224821871d9dc9fd331ab3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned ls::draw::fontResource::getNumGlyphs</definition>
        <argsstring>() const </argsstring>
        <name>getNumGlyphs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of glyphs that have been loaded </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="228" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1draw_1_1font_resource_1a09ff077387945abe5a2ce94752f6ab75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>math::vec2i</type>
        <definition>math::vec2i ls::draw::fontResource::getMaxGlyphSize</definition>
        <argsstring>() const </argsstring>
        <name>getMaxGlyphSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the widest glyph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="233" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/fontResource_impl.h" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Font File loader. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
 A font loader can load TTF and OTF fonts by proxy of the FreeType library. When using the <ref refid="classls_1_1utils_1_1resource_1ac7ea69ade647fad36ccf0ba13d72e5c1" kindref="member">getData()</ref> method, the returned pointer should be type casted <heading level="2">to &quot;const glyph*&quot;. </heading>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="28">
        <label>ls::draw::fontResource</label>
        <link refid="classls_1_1draw_1_1font_resource"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>ls::utils::resource</label>
        <link refid="classls_1_1utils_1_1resource"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="30">
        <label>ls::draw::fontResource</label>
        <link refid="classls_1_1draw_1_1font_resource"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>ls::utils::resource</label>
        <link refid="classls_1_1utils_1_1resource"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" line="47" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/draw/fontResource.h" bodystart="47" bodyend="234"/>
    <listofallmembers>
      <member refid="classls_1_1draw_1_1font_resource_1a7fdd398bc4fd09867932a112ae5a2e81" prot="private" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>atlas</name></member>
      <member refid="classls_1_1utils_1_1resource_1a6748a8528cc1af299d511d9a2f8a74ce" prot="protected" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>dataSize</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a99aaba03b17b691957c5ba9cd856c901ab4d00758058976c3805cbb6709df3f20" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>DEFAULT_FONT_SIZE</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a97300e19efec27cdeb79168c8fa19a50" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>fontResource</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a2d09893995ce86b7a9138f2aba65f9b6" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>fontResource</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1af8dc7ec3da52ed898637aaeb7406aa54" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>fontResource</name></member>
      <member refid="classls_1_1utils_1_1resource_1ae8c73df0e1904ef69c4473d253c07996" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>getByteSize</name></member>
      <member refid="classls_1_1utils_1_1resource_1ac7ea69ade647fad36ccf0ba13d72e5c1" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>getData</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a4c08a4c6a0c84d75887416bd4905b7a4" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>getFontSize</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1aacdedfeaaec34fdf85e7f57adf3e4dda" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>getGlyphs</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a09ff077387945abe5a2ce94752f6ab75" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>getMaxGlyphSize</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1ad80176cc0a224821871d9dc9fd331ab3" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>getNumGlyphs</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a55652fe017d5baf9e748829a54c9c477" prot="private" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>glyphSize</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a1c8412fe00c16f8265af89bcee0f0e5a" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>loadFile</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a3e008830449d927274b61b5beddefd04" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>loadFile</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1ac0a8c50623e08de5adb403e0176a05c4" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>loadFile</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a4ea643c3666bc0a0eaa50f31502a4c29" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>loadFile</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1af3833cb3c11187f626dc27d70d4f82d5" prot="private" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>loadGlyphs</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a191b155da3d8a1d6258eb1d0ffdf0edf" prot="private" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>maxGlyphSize</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1ab7c997042f8e6bea2279feff64eae443" prot="private" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>numGlyphs</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a9857afe0094a822879e898a70d15ff08" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>operator=</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a8f6ef1b53150c37233850e88f53add35" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>operator=</name></member>
      <member refid="classls_1_1utils_1_1resource_1aa13ad61fc6557eae016bd09a0f03423a" prot="public" virt="non-virtual" ambiguityscope="ls::utils::resource::"><scope>ls::draw::fontResource</scope><name>operator=</name></member>
      <member refid="classls_1_1utils_1_1resource_1a9cd97e981d5fbbc17d645a0fa94c5e3b" prot="public" virt="non-virtual" ambiguityscope="ls::utils::resource::"><scope>ls::draw::fontResource</scope><name>operator=</name></member>
      <member refid="classls_1_1utils_1_1resource_1a6d51ff840102e455c80b6a8dbc15e326" prot="protected" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>pData</name></member>
      <member refid="classls_1_1utils_1_1resource_1a343735f471d08b7e3e1a71f0ff358158" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>resource</name></member>
      <member refid="classls_1_1utils_1_1resource_1a4211e2fc500db81a83870493e86ffbee" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>resource</name></member>
      <member refid="classls_1_1utils_1_1resource_1a1395afc3c010934708bbc769fc0b0e80" prot="public" virt="non-virtual"><scope>ls::draw::fontResource</scope><name>resource</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1a399d865e1c2c42b84e293e6e1608df9d" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>saveFile</name></member>
      <member refid="classls_1_1utils_1_1resource_1a8f0ccf4c1548983b42fcbb8054ee9339" prot="public" virt="virtual" ambiguityscope="ls::utils::resource::"><scope>ls::draw::fontResource</scope><name>saveFile</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1ac44b470ddbecec262d9792a78508fb8b" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>unload</name></member>
      <member refid="classls_1_1draw_1_1font_resource_1aad21fad7713108c7f2c607210e6bcb36" prot="public" virt="virtual"><scope>ls::draw::fontResource</scope><name>~fontResource</name></member>
      <member refid="classls_1_1utils_1_1resource_1a1e7c76b1fce42a50b8605d947cc7e736" prot="public" virt="pure-virtual"><scope>ls::draw::fontResource</scope><name>~resource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
