<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="matrix_stack__impl_8h" kind="file">
    <compoundname>matrixStack_impl.h</compoundname>
    <includedby refid="matrix_stack_8h" local="yes">C:/Users/miles/C++/projects/LightSky/lightsky/draw/matrixStack.h</includedby>
    <invincdepgraph>
      <node id="915">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/lightsky.h</label>
        <link refid="lightsky_8h"/>
        <childnode refid="916" relation="include">
        </childnode>
      </node>
      <node id="917">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/matrixStack.cpp</label>
        <link refid="matrix_stack_8cpp"/>
      </node>
      <node id="913">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/matrixStack.h</label>
        <link refid="matrix_stack_8h"/>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
      </node>
      <node id="914">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/draw.h</label>
        <link refid="draw_8h"/>
        <childnode refid="915" relation="include">
        </childnode>
      </node>
      <node id="912">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/matrixStack_impl.h</label>
        <link refid="matrixStack_impl.h"/>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="916">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/src/lightsky.cpp</label>
        <link refid="lightsky_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1draw">ls::draw</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">draw<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Multiply<sp/>the<sp/>selected<sp/>matrix<sp/>with<sp/>the<sp/>one<sp/>passed<sp/>into<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classls_1_1draw_1_1matrix_stack_1ae0d9503b39bc6d45a8e91e040da16545" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1ae0d9503b39bc6d45a8e91e040da16545" kindref="member">matrixStack::multMatrix</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].top()<sp/>=<sp/>m<sp/>*<sp/>stacks[mt].top();</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Multiply<sp/>the<sp/>matrix<sp/>stack</highlight></codeline>
<codeline lineno="14"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classls_1_1draw_1_1matrix_stack_1a5e892f788f16e974dbccd4ca00098822" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a5e892f788f16e974dbccd4ca00098822" kindref="member">matrixStack::constructMvp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classls_1_1draw_1_1matrix_stack_1a09a3fce47937a8be54a7f1ad50e7d2cc" kindref="member">constructVp</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>mvpMatrix<sp/>=<sp/>vpMatrix<sp/>*<sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a7af466298b733f93222a457cc5553fa6" kindref="member">MATRIX_USE_MODEL</ref>].top();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Multiply<sp/>the<sp/>view<sp/>and<sp/>projection<sp/>stacks</highlight></codeline>
<codeline lineno="22"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classls_1_1draw_1_1matrix_stack_1a09a3fce47937a8be54a7f1ad50e7d2cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a09a3fce47937a8be54a7f1ad50e7d2cc" kindref="member">matrixStack::constructVp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>vpMatrix<sp/>=<sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528abaa7e87b04aeac47d882cb097cdb14f4" kindref="member">MATRIX_USE_PROJECTION</ref>].top()<sp/>*<sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a8f712633b5b58b9cd3dcbb311f571f40" kindref="member">MATRIX_USE_VIEW</ref>].top();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Get<sp/>the<sp/>current<sp/>model<sp/>matrix</highlight></codeline>
<codeline lineno="29"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classls_1_1draw_1_1matrix_stack_1a4316a8caff85f6cc103d6de9006b5ca9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a4316a8caff85f6cc103d6de9006b5ca9" kindref="member">matrixStack::getMatrix</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stacks[mt].top();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Get<sp/>the<sp/>MVP<sp/>Matrix</highlight></codeline>
<codeline lineno="36"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classls_1_1draw_1_1matrix_stack_1af205779f60470ee49c01091e717fadec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/><ref refid="classls_1_1draw_1_1matrix_stack_1af205779f60470ee49c01091e717fadec" kindref="member">matrixStack::getMvpMatrix</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mvpMatrix;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Get<sp/>the<sp/>VP<sp/>Matrix</highlight></codeline>
<codeline lineno="43"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classls_1_1draw_1_1matrix_stack_1a05d4db6aac4bdbfdfeb5d383ef4353cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a05d4db6aac4bdbfdfeb5d383ef4353cc" kindref="member">matrixStack::getVpMatrix</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vpMatrix;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Clear<sp/>a<sp/>specific<sp/>Stack</highlight></codeline>
<codeline lineno="50"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classls_1_1draw_1_1matrix_stack_1a962d7b8bdf878d362a63c14cf65f55b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a962d7b8bdf878d362a63c14cf65f55b0" kindref="member">matrixStack::size</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stacks[mt].size();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>draw<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ls<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/matrixStack_impl.h"/>
  </compounddef>
</doxygen>
