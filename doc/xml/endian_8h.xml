<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="endian_8h" kind="file">
    <compoundname>endian.h</compoundname>
    <includes local="no">cstdint</includes>
    <includedby refid="utils_8h" local="yes">C:/Users/miles/C++/projects/LightSky/lightsky/utils/utils.h</includedby>
    <incdepgraph>
      <node id="7560">
        <label>cstdint</label>
      </node>
      <node id="7559">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/utils/endian.h</label>
        <link refid="endian.h"/>
        <childnode refid="7560" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7562">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="7563" relation="include">
        </childnode>
      </node>
      <node id="7563">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/lightsky.h</label>
        <link refid="lightsky_8h"/>
        <childnode refid="7564" relation="include">
        </childnode>
      </node>
      <node id="7561">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/utils/endian.h</label>
        <link refid="endian.h"/>
        <childnode refid="7562" relation="include">
        </childnode>
      </node>
      <node id="7564">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/src/lightsky.cpp</label>
        <link refid="lightsky_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1utils">ls::utils</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="endian_8h_1af5f26d6b30bbf6f0137bd06ec5cf0f0c" prot="public" static="no">
        <name>LS_ENDIANNESS</name>
        <initializer><ref refid="namespacels_1_1utils_1aee791167ca041966fc9162b85fecf917" kindref="member">ls::utils::getEndianOrder</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro that should be used to always get the endianness of the current build target. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/endian.h" line="187" column="9" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/endian.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/>bytes/endian.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Miles<sp/>Lacey</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>methods<sp/>to<sp/>determine<sp/>the<sp/>current<sp/>system&apos;s<sp/>endian<sp/>order<sp/>at</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>compile-time.<sp/>This<sp/>is<sp/>preferred<sp/>over<sp/>using<sp/>the<sp/>preprocessor<sp/>as<sp/>macros<sp/>may</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>be<sp/>added<sp/>and<sp/>updated<sp/>over<sp/>time.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LS_UTILS_ENDIAN_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__LS_UTILS_ENDIAN_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">utils<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681c" kindref="member">endian_t</ref><sp/>:<sp/>uint32_t<sp/>{</highlight></codeline>
<codeline lineno="27" refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681ca0c096dca1a0eaa414800d03be90aa14f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681ca0c096dca1a0eaa414800d03be90aa14f" kindref="member">LS_LITTLE_ENDIAN</ref><sp/><sp/><sp/>=<sp/>0x00000001,</highlight></codeline>
<codeline lineno="28" refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681caa2a4e0f8cb7e8973c91715cc562d9c51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681caa2a4e0f8cb7e8973c91715cc562d9c51" kindref="member">LS_BIG_ENDIAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x01000000,</highlight></codeline>
<codeline lineno="29" refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cab3cdd7e3bf4d96afcfb6185a465f5246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cab3cdd7e3bf4d96afcfb6185a465f5246" kindref="member">LS_PDP_ENDIAN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00010000,</highlight></codeline>
<codeline lineno="30" refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cae3f5e5798cae0f1e0d34ae2a65379e6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cae3f5e5798cae0f1e0d34ae2a65379e6e" kindref="member">LS_UNKNOWN_ENDIAN</ref><sp/><sp/>=<sp/>0xFFFFFFFF</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="38" refid="namespacels_1_1utils_1aee791167ca041966fc9162b85fecf917" refkind="member"><highlight class="normal"><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681c" kindref="member">endian_t</ref><sp/><ref refid="namespacels_1_1utils_1aee791167ca041966fc9162b85fecf917" kindref="member">getEndianOrder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0xFFFFFFFF<sp/>&amp;<sp/>1)<sp/>==<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681ca0c096dca1a0eaa414800d03be90aa14f" kindref="member">LS_LITTLE_ENDIAN</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681ca0c096dca1a0eaa414800d03be90aa14f" kindref="member">LS_LITTLE_ENDIAN</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((0xFFFFFFFF<sp/>&amp;<sp/>1)<sp/>==<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681caa2a4e0f8cb7e8973c91715cc562d9c51" kindref="member">LS_BIG_ENDIAN</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681caa2a4e0f8cb7e8973c91715cc562d9c51" kindref="member">LS_BIG_ENDIAN</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((0xFFFFFFFF<sp/>&amp;<sp/>1)<sp/>==<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cab3cdd7e3bf4d96afcfb6185a465f5246" kindref="member">LS_PDP_ENDIAN</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cab3cdd7e3bf4d96afcfb6185a465f5246" kindref="member">LS_PDP_ENDIAN</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacels_1_1utils_1a46f2dd4d3b29d671977ccf97c4ad681cae3f5e5798cae0f1e0d34ae2a65379e6e" kindref="member">LS_UNKNOWN_ENDIAN</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="61" refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(uint16_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;&gt;<sp/>8)<sp/>^<sp/>(n<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="77" refid="namespacels_1_1utils_1ab0695c04ff154c015e5f5259ded36b00" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(int16_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int16_t)<ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>((uint16_t)n);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="93" refid="namespacels_1_1utils_1abea33b0755486b2efef9f66403b1ac57" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(uint32_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x000000FF<sp/>&amp;<sp/>(n<sp/>&gt;&gt;<sp/>24))<sp/>^</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x0000FF00<sp/>&amp;<sp/>(n<sp/>&gt;&gt;<sp/>8))<sp/>^</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x00FF0000<sp/>&amp;<sp/>(n<sp/>&lt;&lt;<sp/>8))<sp/>^</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>(0xFF000000<sp/>&amp;<sp/>(n<sp/>&lt;&lt;<sp/>24));</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="113" refid="namespacels_1_1utils_1acc2cd4eda56bcd75bcc586bd2cb99324" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(int32_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>((uint32_t)n);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="129" refid="namespacels_1_1utils_1a4d3ea0bf2b99f0c1d9d1fa8b34329107" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(uint64_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x00000000000000FF<sp/>&amp;<sp/>(n<sp/>&gt;&gt;<sp/>56))<sp/>^</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x000000000000FF00<sp/>&amp;<sp/>(n<sp/>&gt;&gt;<sp/>40))<sp/>^</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x0000000000FF0000<sp/>&amp;<sp/>(n<sp/>&gt;&gt;<sp/>24))<sp/>^</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x00000000FF000000<sp/>&amp;<sp/>(n<sp/>&gt;&gt;<sp/>8))<sp/>^</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x000000FF00000000<sp/>&amp;<sp/>(n<sp/>&lt;&lt;<sp/>8))<sp/>^</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x0000FF0000000000<sp/>&amp;<sp/>(n<sp/>&lt;&lt;<sp/>24))<sp/>^</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>(0x00FF000000000000<sp/>&amp;<sp/>(n<sp/>&lt;&lt;<sp/>40))<sp/>^</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>(0xFF00000000000000<sp/>&amp;<sp/>(n<sp/>&lt;&lt;<sp/>56));</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">constexpr</highlight></codeline>
<codeline lineno="153" refid="namespacels_1_1utils_1a0a3d0523d666351728a104ff7822c374" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(int64_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int64_t)<ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>((uint64_t)n);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>num_t&gt;</highlight></codeline>
<codeline lineno="168" refid="namespacels_1_1utils_1abd2af0a3948a7e9c5cda4083409ac041" refkind="member"><highlight class="normal">num_t<sp/><ref refid="namespacels_1_1utils_1aff29c0be67deb66b6538607129367028" kindref="member">btol</ref>(num_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>num_t<sp/>ret;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pIn<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)&amp;n;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pOut<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)&amp;ret;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num_t)-1;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num_t);<sp/>++i,<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOut[i]<sp/>=<sp/>pIn[j];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>utils<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>ls<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="endian_8h_1af5f26d6b30bbf6f0137bd06ec5cf0f0c" refkind="member"><highlight class="preprocessor">#define<sp/>LS_ENDIANNESS<sp/>ls::utils::getEndianOrder()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__LS_UTILS_ENDIAN_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/endian.h"/>
  </compounddef>
</doxygen>
