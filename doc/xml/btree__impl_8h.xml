<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="btree__impl_8h" kind="file">
    <compoundname>btree_impl.h</compoundname>
    <includedby refid="btree_8h" local="yes">C:/Users/miles/C++/projects/LightSky/lightsky/utils/btree.h</includedby>
    <invincdepgraph>
      <node id="7575">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="7576" relation="include">
        </childnode>
      </node>
      <node id="7576">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/lightsky.h</label>
        <link refid="lightsky_8h"/>
        <childnode refid="7577" relation="include">
        </childnode>
      </node>
      <node id="7574">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/utils/btree.h</label>
        <link refid="btree_8h"/>
        <childnode refid="7575" relation="include">
        </childnode>
      </node>
      <node id="7577">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/src/lightsky.cpp</label>
        <link refid="lightsky_8cpp"/>
      </node>
      <node id="7573">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/utils/generic/btree_impl.h</label>
        <link refid="btree_impl.h"/>
        <childnode refid="7574" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1utils">ls::utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">utils<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Constructor</highlight></codeline>
<codeline lineno="7"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="9" refid="classls_1_1utils_1_1b_tree_1ad26062b96c2df747b5ec9e1ece716fa9" refkind="member"><highlight class="normal">constexpr<sp/><ref refid="classls_1_1utils_1_1b_tree_1ad26062b96c2df747b5ec9e1ece716fa9" kindref="member">bTree&lt;key_t, data_t&gt;::bTree</ref>()<sp/>:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>head{},</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>numNodes{0}</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Copy<sp/>Constructor</highlight></codeline>
<codeline lineno="16"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="18" refid="classls_1_1utils_1_1b_tree_1a9ed9b06bf38fd454ae57e539ec01e755" refkind="member"><highlight class="normal"><ref refid="classls_1_1utils_1_1b_tree_1ad26062b96c2df747b5ec9e1ece716fa9" kindref="member">bTree&lt;key_t, data_t&gt;::bTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree</ref>&amp;<sp/>bt)<sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>head{<sp/>bt.head<sp/>},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>numNodes{<sp/>bt.numNodes<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Move<sp/>Constructor</highlight></codeline>
<codeline lineno="25"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="27" refid="classls_1_1utils_1_1b_tree_1a0d2e273a7c7548175c217ae47d71c87c" refkind="member"><highlight class="normal"><ref refid="classls_1_1utils_1_1b_tree_1ad26062b96c2df747b5ec9e1ece716fa9" kindref="member">bTree&lt;key_t, data_t&gt;::bTree</ref>(<ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree</ref>&amp;&amp;<sp/>bt)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>head.subNodes<sp/>=<sp/>bt.head.subNodes;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>bt.head.subNodes<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>numNodes<sp/>=<sp/>bt.numNodes;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>bt.numNodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Copy<sp/>Operator</highlight></codeline>
<codeline lineno="37"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="39" refid="classls_1_1utils_1_1b_tree_1a15e5f75964c1c960aefb897e327dffbd" refkind="member"><highlight class="normal"><ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree&lt;key_t, data_t&gt;</ref>&amp;<sp/><ref refid="classls_1_1utils_1_1b_tree_1a15e5f75964c1c960aefb897e327dffbd" kindref="member">bTree&lt;key_t, data_t&gt;::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree</ref>&amp;<sp/>bt)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/>=<sp/>bt.head;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>numNodes<sp/>=<sp/>bt.numNodes;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Move<sp/>Operator</highlight></codeline>
<codeline lineno="47"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="49" refid="classls_1_1utils_1_1b_tree_1a869c1eed72480a6bd681953fd63dd397" refkind="member"><highlight class="normal"><ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree&lt;key_t, data_t&gt;</ref>&amp;<sp/><ref refid="classls_1_1utils_1_1b_tree_1a15e5f75964c1c960aefb897e327dffbd" kindref="member">bTree&lt;key_t, data_t&gt;::operator =</ref>(<ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree</ref>&amp;&amp;<sp/>bt)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>head.subNodes<sp/>=<sp/>bt.head.subNodes;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>bt.head.subNodes<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>numNodes<sp/>=<sp/>bt.numNodes;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>bt.numNodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Element<sp/>iteration</highlight></codeline>
<codeline lineno="61"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/><ref refid="classls_1_1utils_1_1b_tree" kindref="compound">bTree&lt;key_t, data_t&gt;::iterate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_t*<sp/>k,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createNodes)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytePos<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>bNodeIter<sp/><sp/><sp/>=<sp/>&amp;head;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structls_1_1utils_1_1bit_mask" kindref="compound">utils::bitMask</ref>*<sp/><sp/><sp/>byteIter<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(byteIter<sp/>=<sp/>ls::utils::getByte&lt;key_t&gt;(k,<sp/>bytePos++))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>currBit<sp/>=<sp/><ref refid="bits_8h_1a0105d4b835d80277c7ea8662c5f1b946" kindref="member">LS_BITS_PER_BYTE</ref>;<sp/>currBit--;)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>see<sp/>if<sp/>a<sp/>new<sp/>bTreeNode<sp/>needs<sp/>to<sp/>be<sp/>made</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bNodeIter-&gt;subNodes)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(createNodes)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>and<sp/>initialize<sp/>the<sp/>upcoming<sp/>sub<sp/>bTreeNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bNodeIter-&gt;subNodes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>[<ref refid="namespacels_1_1utils_1a9b60097c422c6b68c6bc3f2e3e37dad0a31a777f60dd4a8908d43975080f1c5b1" kindref="member">BNODE_MAX</ref>];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>the<sp/>next<sp/>bTreeNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>byteIter-&gt;<ref refid="structls_1_1utils_1_1bit_mask_1a3e0b05872b07794c7f808cfbf6ac9a90" kindref="member">get</ref>(currBit);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bNodeIter<sp/>=<sp/>&amp;(bNodeIter-&gt;subNodes[dir]);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bNodeIter;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Destructor</highlight></codeline>
<codeline lineno="95"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="97" refid="classls_1_1utils_1_1b_tree_1a600f51529b5afa712fc654c7fe9e2d8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree_1a600f51529b5afa712fc654c7fe9e2d8a" kindref="member">bTree&lt;key_t, data_t&gt;::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>head.data;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>head.subNodes;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>head.data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>head.subNodes<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>numNodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Node<sp/>Array<sp/>Subscript<sp/>operator</highlight></codeline>
<codeline lineno="108"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="110" refid="classls_1_1utils_1_1b_tree_1a19181478ca66682c95542f6884514d20" refkind="member"><highlight class="normal">data_t&amp;<sp/><ref refid="classls_1_1utils_1_1b_tree_1a19181478ca66682c95542f6884514d20" kindref="member">bTree&lt;key_t, data_t&gt;::operator []</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_t&amp;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/>iter<sp/>=<sp/>iterate(&amp;k,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>data_t();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numNodes;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*iter-&gt;data;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Push</highlight></codeline>
<codeline lineno="123"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="125" refid="classls_1_1utils_1_1b_tree_1abef490f92f8480aa721210619586cd10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree_1abef490f92f8480aa721210619586cd10" kindref="member">bTree&lt;key_t, data_t&gt;::push</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_t&amp;<sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_t&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/>iter<sp/>=<sp/>iterate(&amp;k,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>data_t(d);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numNodes;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter-&gt;data<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Pop</highlight></codeline>
<codeline lineno="139"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="141" refid="classls_1_1utils_1_1b_tree_1ab28bcf0d0f070f67e421c08c86b3ad32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree_1ab28bcf0d0f070f67e421c08c86b3ad32" kindref="member">bTree&lt;key_t, data_t&gt;::pop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_t&amp;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/>iter<sp/>=<sp/>iterate(&amp;k,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter<sp/>||<sp/>!iter-&gt;data)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter-&gt;data;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>--numNodes;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Has<sp/>Data</highlight></codeline>
<codeline lineno="154"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="156" refid="classls_1_1utils_1_1b_tree_1afa42537f6de813d5cf20b45f005f2d98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classls_1_1utils_1_1b_tree_1afa42537f6de813d5cf20b45f005f2d98" kindref="member">bTree&lt;key_t, data_t&gt;::hasData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_t&amp;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/>iter<sp/>=<sp/>iterate(&amp;k,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter<sp/>&amp;&amp;<sp/>(iter-&gt;data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/>B-Tree<sp/>Push</highlight></codeline>
<codeline lineno="164"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>data_t&gt;</highlight></codeline>
<codeline lineno="166" refid="classls_1_1utils_1_1b_tree_1a7df76968982d2bc5470af7f176e6ed48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_t*<sp/><ref refid="classls_1_1utils_1_1b_tree_1a7df76968982d2bc5470af7f176e6ed48" kindref="member">bTree&lt;key_t, data_t&gt;::getData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_t&amp;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1utils_1_1b_tree_node" kindref="compound">bTreeNode&lt;data_t&gt;</ref>*<sp/>iter<sp/>=<sp/>iterate(&amp;k,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;data;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>utils<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ls<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/generic/btree_impl.h"/>
  </compounddef>
</doxygen>
