<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="mesh_model__impl_8h" kind="file">
    <compoundname>meshModel_impl.h</compoundname>
    <includedby refid="mesh_model_8h" local="yes">C:/Users/miles/C++/projects/LightSky/lightsky/draw/meshModel.h</includedby>
    <invincdepgraph>
      <node id="934">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/lightsky.h</label>
        <link refid="lightsky_8h"/>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="937">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/sceneManager.cpp</label>
        <link refid="scene_manager_8cpp"/>
      </node>
      <node id="933">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/draw.h</label>
        <link refid="draw_8h"/>
        <childnode refid="934" relation="include">
        </childnode>
      </node>
      <node id="932">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/meshModel.h</label>
        <link refid="mesh_model_8h"/>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
      </node>
      <node id="938">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/meshModel.cpp</label>
        <link refid="mesh_model_8cpp"/>
      </node>
      <node id="931">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/meshModel_impl.h</label>
        <link refid="meshModel_impl.h"/>
        <childnode refid="932" relation="include">
        </childnode>
      </node>
      <node id="936">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/sceneManager.h</label>
        <link refid="scene_manager_8h"/>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
      </node>
      <node id="935">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/src/lightsky.cpp</label>
        <link refid="lightsky_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1draw">ls::draw</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">draw<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>GPU-Assigned<sp/>ID<sp/>associated<sp/>with<sp/>this<sp/>mesh<sp/>model.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classls_1_1draw_1_1mesh_model_1adcb76c5197517c521be8a8dbeed588ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_model_1adcb76c5197517c521be8a8dbeed588ed" kindref="member">meshModel::getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vao.<ref refid="classls_1_1draw_1_1vertex_array_1a0f73b91ee0fbf11d7a63f673a5aad4ad" kindref="member">getId</ref>();</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>mesh<sp/>that<sp/>is<sp/>currently<sp/>used<sp/>by<sp/>this<sp/>model</highlight></codeline>
<codeline lineno="14"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classls_1_1draw_1_1mesh_model_1af1afe35e83e61d2ac1b0146ac1aa0b29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh" kindref="compound">mesh</ref>&amp;<sp/><ref refid="classls_1_1draw_1_1mesh_model_1af1afe35e83e61d2ac1b0146ac1aa0b29" kindref="member">meshModel::getMesh</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pMesh;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>texture<sp/>that<sp/>is<sp/>currently<sp/>used<sp/>by<sp/>this<sp/>model</highlight></codeline>
<codeline lineno="21"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classls_1_1draw_1_1mesh_model_1a8684fc965577ba9659aee700dae7d261" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1texture" kindref="compound">texture</ref>&amp;<sp/><ref refid="classls_1_1draw_1_1mesh_model_1a8684fc965577ba9659aee700dae7d261" kindref="member">meshModel::getTexture</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pTexture;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>texture<sp/>ID<sp/>to<sp/>be<sp/>used<sp/>by<sp/>this<sp/>object<sp/>during<sp/>a<sp/>draw<sp/>operation.</highlight></codeline>
<codeline lineno="28"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classls_1_1draw_1_1mesh_model_1a981a084cfb24e24af15fab4a76e621f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_model_1a981a084cfb24e24af15fab4a76e621f1" kindref="member">meshModel::setTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1texture" kindref="compound">texture</ref>&amp;<sp/>texRef)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pTexture<sp/>=<sp/>&amp;texRef;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>number<sp/>of<sp/>instances<sp/>that<sp/>will<sp/>be<sp/>rendered<sp/>when<sp/>a<sp/>call<sp/>to</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;draw()&quot;<sp/>is<sp/>made.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classls_1_1draw_1_1mesh_model_1a38a3773783d8bf9ccf80c886306154b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_model_1a38a3773783d8bf9ccf80c886306154b6" kindref="member">meshModel::getNumInstances</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numInstances;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>Determine<sp/>if<sp/>this<sp/>current<sp/>model<sp/>is<sp/>able<sp/>to<sp/>be<sp/>rendered.</highlight></codeline>
<codeline lineno="43"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classls_1_1draw_1_1mesh_model_1a8972c66e853230d65cd6de871c0ab4ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_model_1a8972c66e853230d65cd6de871c0ab4ca" kindref="member">meshModel::canDraw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pMesh<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>pTexture<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>Render<sp/>all<sp/>instances<sp/>of<sp/>the<sp/>currently<sp/>bound<sp/>mesh<sp/>to<sp/>OpenGL.</highlight></codeline>
<codeline lineno="50"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classls_1_1draw_1_1mesh_model_1ac4aa63983e54055921882578ca6708e9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_model_1ac4aa63983e54055921882578ca6708e9" kindref="member">meshModel::draw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>pTexture-&gt;<ref refid="classls_1_1draw_1_1texture_1a23e1d0ad54357b48fd701cb1ec7ba383" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>vao.<ref refid="classls_1_1draw_1_1vertex_array_1a6bc8c94458b79ff6fdc3caf11a3fa162" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArraysInstanced(pMesh-&gt;<ref refid="classls_1_1draw_1_1mesh_1a110476a35cd95eee211793819d64189d" kindref="member">getDrawMode</ref>(),<sp/>0,<sp/>pMesh-&gt;<ref refid="classls_1_1draw_1_1mesh_1a05d2ae8850e7d0b887c0e4300de4a6d2" kindref="member">getNumVertices</ref>(),<sp/>numInstances);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vao.<ref refid="classls_1_1draw_1_1vertex_array_1a1b50fa0e2c66659eaab487b8858bf9b1" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>pTexture-&gt;<ref refid="classls_1_1draw_1_1texture_1aa7c112e4b0bb6577eacb5d8c345fdc2d" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>Render<sp/>an<sp/>instanced<sp/>set<sp/>of<sp/>sub-meshes</highlight></codeline>
<codeline lineno="61"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classls_1_1draw_1_1mesh_model_1a3985c065ec45ff2a4ea1ebb03bf0bdb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_model_1a3985c065ec45ff2a4ea1ebb03bf0bdb0" kindref="member">meshModel::drawSubMesh</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startPos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endPos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>pTexture-&gt;<ref refid="classls_1_1draw_1_1texture_1a23e1d0ad54357b48fd701cb1ec7ba383" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>vao.<ref refid="classls_1_1draw_1_1vertex_array_1a6bc8c94458b79ff6fdc3caf11a3fa162" kindref="member">bind</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArraysInstanced(pMesh-&gt;<ref refid="classls_1_1draw_1_1mesh_1a110476a35cd95eee211793819d64189d" kindref="member">getDrawMode</ref>(),<sp/>startPos,<sp/>endPos,<sp/>numInstances);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>vao.<ref refid="classls_1_1draw_1_1vertex_array_1a1b50fa0e2c66659eaab487b8858bf9b1" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pTexture-&gt;<ref refid="classls_1_1draw_1_1texture_1aa7c112e4b0bb6577eacb5d8c345fdc2d" kindref="member">unbind</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>draw<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ls<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/meshModel_impl.h"/>
  </compounddef>
</doxygen>
