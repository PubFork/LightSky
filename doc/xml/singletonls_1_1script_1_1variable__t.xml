<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="singletonls_1_1script_1_1variable__t" kind="class" prot="public">
    <compoundname>ls::script::variable_t</compoundname>
    <basecompoundref refid="classls_1_1script_1_1variable" prot="public" virt="non-virtual">ls::script::variable</basecompoundref>
    <includes refid="script_2setup_8h" local="no">setup.h</includes>
    <templateparamlist>
      <param>
        <type>hash_t</type>
        <declname>hashId</declname>
        <defname>hashId</defname>
      </param>
      <param>
        <type>typename type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="singletonls_1_1script_1_1variable__t_1a18a7a4f62bebf4b8a8fd7c7f792c8632" prot="public" static="no" mutable="no">
        <type>type</type>
        <definition>type ls::script::variable_t&lt; hashId, type &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
<para>Data Member. </para>        </briefdescription>
        <detaileddescription>
<para>This class member is meant to be as transparent as a regular variable in code. Since scripted objects contain no internal manipulation, it can remain exposed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="109" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1af125391c42500a639c90d9958d178f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ls::script::variable_t&lt; hashId, type &gt;::~variable_t</definition>
        <argsstring>()</argsstring>
        <name>~variable_t</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Cleans up any resources used by the parent classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="116" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a85ff5f9c46af38e80d04443617874097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::script::variable_t&lt; hashId, type &gt;::variable_t</definition>
        <argsstring>()</argsstring>
        <name>variable_t</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes all base classes and data members. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="123" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a3bd1918edffef63e5a85a1ff9b960b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::script::variable_t&lt; hashId, type &gt;::variable_t</definition>
        <argsstring>(const variable_t &amp;v)</argsstring>
        <name>variable_t</name>
        <param>
          <type>const <ref refid="singletonls_1_1script_1_1variable__t" kindref="compound">variable_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Copies data from the input parameter into *this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant reference to a scripting variable of the same type as *this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="134" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a87871eb0803441a7db5b08eb815b6487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::script::variable_t&lt; hashId, type &gt;::variable_t</definition>
        <argsstring>(variable_t &amp;&amp;v)</argsstring>
        <name>variable_t</name>
        <param>
          <type><ref refid="singletonls_1_1script_1_1variable__t" kindref="compound">variable_t</ref> &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Moves data from the input parameter into *this without performing any copies.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>An r-value reference to a scripting variable of the same type as *this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="146" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a8237d32ebcdaaa5c86a16c61f69313e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="singletonls_1_1script_1_1variable__t" kindref="compound">variable_t</ref> &amp;</type>
        <definition>variable_t&lt; hashId, type &gt; &amp; ls::script::variable_t&lt; hashId, type &gt;::operator=</definition>
        <argsstring>(const variable_t &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="singletonls_1_1script_1_1variable__t" kindref="compound">variable_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Copy Operator. </para>        </briefdescription>
        <detaileddescription>
<para>Copies data from the input parameter into *this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant reference to a scripting variable of the same type as *this.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="159" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1aae6ed28ead531a051ef667d8f73302c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="singletonls_1_1script_1_1variable__t" kindref="compound">variable_t</ref> &amp;</type>
        <definition>variable_t&lt; hashId, type &gt; &amp; ls::script::variable_t&lt; hashId, type &gt;::operator=</definition>
        <argsstring>(variable_t &amp;&amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="singletonls_1_1script_1_1variable__t" kindref="compound">variable_t</ref> &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Move Operator. </para>        </briefdescription>
        <detaileddescription>
<para>Moves data from the input parameter into *this without performing any copies.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>An r-value reference to a scripting variable of the same type as *this.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="173" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a1772c656c9314ce60629d689ecd36181" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ls::script::variable_t&lt; hashId, type &gt;::load</definition>
        <argsstring>(std::istream &amp;istr, varLoaderMap &amp;vlm, funcLoaderMap &amp;flm)</argsstring>
        <name>load</name>
        <reimplements refid="classls_1_1script_1_1scriptable_1a056218abb0bbf49aa175a20c9e5feb32">load</reimplements>
        <param>
          <type>std::istream &amp;</type>
          <declname>istr</declname>
        </param>
        <param>
          <type><ref refid="namespacels_1_1script_1a7269f0f5e6dd192ead0637331c331671" kindref="member">varLoaderMap</ref> &amp;</type>
          <declname>vlm</declname>
        </param>
        <param>
          <type><ref refid="namespacels_1_1script_1acbb0b98d89aa532fe62e508927abb22c" kindref="member">funcLoaderMap</ref> &amp;</type>
          <declname>flm</declname>
        </param>
        <briefdescription>
<para>Load Variable data from an std::istream. </para>        </briefdescription>
        <detaileddescription>
<para>A serialization method to will help reload data from a standard input stream. This method uses the overloaded input stream operator &apos;std::istream::operator &gt;&gt; (T)&apos; in order to load variable data into *this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>istr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a std::istream object which contains variable data to be loaded into *this.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>varLoader</parametername>
</parameternamelist>
<parameterdescription>
<para>A variable-loading factory that will be used to map variable data from the input stream into *this.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>funcLoader</parametername>
</parameternamelist>
<parameterdescription>
<para>A function-loading factory that will be used to map functor data from the input stream into *this.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean value that will determine if data was successfully loaded into *this (TRUE) or not (FALSE). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="198" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a127692f3be65688a5814f337e8fe717e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ls::script::variable_t&lt; hashId, type &gt;::save</definition>
        <argsstring>(std::ostream &amp;ostr) const </argsstring>
        <name>save</name>
        <reimplements refid="classls_1_1script_1_1scriptable_1adf72ecdf5afee754bb57642f4220585c">save</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <briefdescription>
<para>Save all data from *this into an std::ostream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ostr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an std::ostream object. Each scripted variable must make use of the overloaded stream operator &apos;std::istream::operator &gt;&gt; (T)&apos; in order to save variable data from *this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="209" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="singletonls_1_1script_1_1variable__t_1a6cf40cee4f78ca6815963dde5f2bcfde" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>hash_t</type>
        <definition>hash_t ls::script::variable_t&lt; hashId, type &gt;::getScriptSubType</definition>
        <argsstring>() const final</argsstring>
        <name>getScriptSubType</name>
        <reimplements refid="classls_1_1script_1_1variable_1afb0063d7214481b524024f22261825a1">getScriptSubType</reimplements>
        <briefdescription>
<para>getScriptSubType Retrieve the run-time-type information of the data stored in *this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A portable hash code, representing the hashed lexical name of the data type stored in *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/variable.h" line="218" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/generic/variable_impl.h" bodystart="112" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
 <heading level="2">Extended Variable Template Type </heading>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="120">
        <label>ls::script::variable</label>
        <link refid="classls_1_1script_1_1variable"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>ls::script::variable_t&lt; hashId, type &gt;</label>
        <link refid="singletonls_1_1script_1_1variable__t"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>ls::script::scriptable</label>
        <link refid="classls_1_1script_1_1scriptable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="123">
        <label>ls::script::variable</label>
        <link refid="classls_1_1script_1_1variable"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>ls::script::variable_t&lt; hashId, type &gt;</label>
        <link refid="singletonls_1_1script_1_1variable__t"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>ls::script::scriptable</label>
        <link refid="classls_1_1script_1_1scriptable"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/script/setup.h" line="45" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/script/setup.h" bodystart="45" bodyend="-1"/>
    <listofallmembers>
      <member refid="singletonls_1_1script_1_1variable__t_1a18a7a4f62bebf4b8a8fd7c7f792c8632" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>data</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a6cf40cee4f78ca6815963dde5f2bcfde" prot="public" virt="virtual"><scope>ls::script::variable_t</scope><name>getScriptSubType</name></member>
      <member refid="classls_1_1script_1_1variable_1ad1eb4e04a0319c48238047fbd9497188" prot="public" virt="virtual"><scope>ls::script::variable_t</scope><name>getScriptType</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a1772c656c9314ce60629d689ecd36181" prot="public" virt="virtual"><scope>ls::script::variable_t</scope><name>load</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a8237d32ebcdaaa5c86a16c61f69313e0" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>operator=</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1aae6ed28ead531a051ef667d8f73302c5" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>operator=</name></member>
      <member refid="classls_1_1script_1_1variable_1aaee55855cb48fdc2fd7c085795088a80" prot="public" virt="non-virtual" ambiguityscope="ls::script::variable::"><scope>ls::script::variable_t</scope><name>operator=</name></member>
      <member refid="classls_1_1script_1_1variable_1a190fefa705f9817f189196cf93163a8c" prot="public" virt="non-virtual" ambiguityscope="ls::script::variable::"><scope>ls::script::variable_t</scope><name>operator=</name></member>
      <member refid="classls_1_1script_1_1scriptable_1a0a44fbbc1ef4ebb824a82163257cc490" prot="public" virt="non-virtual" ambiguityscope="ls::script::scriptable::"><scope>ls::script::variable_t</scope><name>operator=</name></member>
      <member refid="classls_1_1script_1_1scriptable_1ae5ab31974a89ab5b3ce4e5b4c3d51591" prot="public" virt="non-virtual" ambiguityscope="ls::script::scriptable::"><scope>ls::script::variable_t</scope><name>operator=</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a127692f3be65688a5814f337e8fe717e" prot="public" virt="virtual"><scope>ls::script::variable_t</scope><name>save</name></member>
      <member refid="classls_1_1script_1_1scriptable_1adf074cf8a86531adc5e273e5bbfb46e2" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>scriptable</name></member>
      <member refid="classls_1_1script_1_1scriptable_1a99f50f8744279cbbd954c124b3dbb9f9" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>scriptable</name></member>
      <member refid="classls_1_1script_1_1scriptable_1a7838ffef45488993cbd83305ac2a121b" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>scriptable</name></member>
      <member refid="classls_1_1script_1_1variable_1af07624d916e15ca0da6f3add2b172b1a" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>variable</name></member>
      <member refid="classls_1_1script_1_1variable_1ae91702817d11cf387cfd30077524afff" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>variable</name></member>
      <member refid="classls_1_1script_1_1variable_1a600d800aaf9c65eadc719ca33a0ffa12" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>variable</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a85ff5f9c46af38e80d04443617874097" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>variable_t</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a3bd1918edffef63e5a85a1ff9b960b2d" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>variable_t</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1a87871eb0803441a7db5b08eb815b6487" prot="public" virt="non-virtual"><scope>ls::script::variable_t</scope><name>variable_t</name></member>
      <member refid="classls_1_1script_1_1scriptable_1a7ac9302b44878e7e1ed78400e3651cde" prot="public" virt="pure-virtual"><scope>ls::script::variable_t</scope><name>~scriptable</name></member>
      <member refid="classls_1_1script_1_1variable_1ac7a9a7ef768e86de74b76ad643e2ae1c" prot="public" virt="pure-virtual"><scope>ls::script::variable_t</scope><name>~variable</name></member>
      <member refid="singletonls_1_1script_1_1variable__t_1af125391c42500a639c90d9958d178f17" prot="public" virt="virtual"><scope>ls::script::variable_t</scope><name>~variable_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
