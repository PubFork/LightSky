<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="shader_object__impl_8h" kind="file">
    <compoundname>shaderObject_impl.h</compoundname>
    <includedby refid="shader_object_8h" local="yes">C:/Users/miles/C++/projects/LightSky/lightsky/draw/shaderObject.h</includedby>
    <invincdepgraph>
      <node id="971">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/shaderObject.cpp</label>
        <link refid="shader_object_8cpp"/>
      </node>
      <node id="965">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/shaderObject.h</label>
        <link refid="shader_object_8h"/>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
      </node>
      <node id="967">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/lightsky.h</label>
        <link refid="lightsky_8h"/>
        <childnode refid="968" relation="include">
        </childnode>
      </node>
      <node id="969">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/shaderProgram.h</label>
        <link refid="shader_program_8h"/>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
      </node>
      <node id="966">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/draw.h</label>
        <link refid="draw_8h"/>
        <childnode refid="967" relation="include">
        </childnode>
      </node>
      <node id="970">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/shaderProgram.cpp</label>
        <link refid="shader_program_8cpp"/>
      </node>
      <node id="964">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/shaderObject_impl.h</label>
        <link refid="shaderObject_impl.h"/>
        <childnode refid="965" relation="include">
        </childnode>
      </node>
      <node id="968">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/src/lightsky.cpp</label>
        <link refid="lightsky_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1draw">ls::draw</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">draw<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>Constructor</highlight></codeline>
<codeline lineno="7"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="9" refid="classls_1_1draw_1_1shader_object_1ae059db620f6cd13ba0f3e283d29f5a2b" refkind="member"><highlight class="normal"><ref refid="classls_1_1draw_1_1shader_object_1ae059db620f6cd13ba0f3e283d29f5a2b" kindref="member">shaderObject&lt;shaderType&gt;::shaderObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>Move<sp/>Constructor</highlight></codeline>
<codeline lineno="14"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="16" refid="classls_1_1draw_1_1shader_object_1a25ffa170bc5a7e08b3c4d7792bcae90e" refkind="member"><highlight class="normal"><ref refid="classls_1_1draw_1_1shader_object_1ae059db620f6cd13ba0f3e283d29f5a2b" kindref="member">shaderObject&lt;shaderType&gt;::shaderObject</ref>(<ref refid="classls_1_1draw_1_1shader_object" kindref="compound">shaderObject</ref>&amp;&amp;<sp/>tempShader)<sp/>:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>objectId{tempShader.objectId}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>tempShader.objectId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>Destructor</highlight></codeline>
<codeline lineno="24"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="26" refid="classls_1_1draw_1_1shader_object_1a502de95f66899966b285b92eccab45ae" refkind="member"><highlight class="normal"><ref refid="classls_1_1draw_1_1shader_object_1a502de95f66899966b285b92eccab45ae" kindref="member">shaderObject&lt;shaderType&gt;::~shaderObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacels_1_1game_1_1global_1ab8f47dd33802e1a54168950a9e51e3c3" kindref="member">terminate</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>Move<sp/>the<sp/>values<sp/>of<sp/>the<sp/>input<sp/>argument<sp/>and<sp/>reset<sp/>the<sp/>moved<sp/>object&apos;s<sp/>values</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="35" refid="classls_1_1draw_1_1shader_object_1a94dae678c10bbfe45896375be8ccf7a6" refkind="member"><highlight class="normal"><ref refid="classls_1_1draw_1_1shader_object" kindref="compound">shaderObject&lt;shaderType&gt;</ref>&amp;<sp/><ref refid="classls_1_1draw_1_1shader_object_1aec2060659f4cebbb43e61a2a339d72d4" kindref="member">shaderObject&lt;shaderType&gt;::operator=</ref>(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classls_1_1draw_1_1shader_object" kindref="compound">shaderObject</ref>&amp;&amp;<sp/>tempShader</highlight></codeline>
<codeline lineno="37"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>objectId<sp/>=<sp/>tempShader.objectId;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>tempShader.objectId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>Free<sp/>all<sp/>memory<sp/>used<sp/>by<sp/>this<sp/>shader<sp/>object.</highlight></codeline>
<codeline lineno="45"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="47" refid="classls_1_1draw_1_1shader_object_1a2440be73a1f6e4d14aee8644aca039b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1shader_object_1a2440be73a1f6e4d14aee8644aca039b6" kindref="member">shaderObject&lt;shaderType&gt;::terminate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(objectId);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>objectId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>Shader<sp/>Loading</highlight></codeline>
<codeline lineno="54"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="56" refid="classls_1_1draw_1_1shader_object_1ade686e6bd7e2a4884cdbc374cb3bdc56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1shader_object_1ade686e6bd7e2a4884cdbc374cb3bdc56" kindref="member">shaderObject&lt;shaderType&gt;::compile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1af694eceb659d9266fd76327d06db65b4" kindref="member">LS_LOG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>load<sp/>a<sp/>shader<sp/>object.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacels_1_1game_1_1global_1ab8f47dd33802e1a54168950a9e51e3c3" kindref="member">terminate</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shaderId;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderId<sp/>=<sp/>glCreateShader(shaderType);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>size<sp/>is<sp/>zero,<sp/>opengl<sp/>will<sp/>just<sp/>look<sp/>for<sp/>null-termination<sp/>in<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glShaderSource(shaderId,<sp/>1,<sp/>&amp;data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glShaderSource(shaderId,<sp/>1,<sp/>&amp;data,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(shaderId);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>shaderStatus;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shaderId,<sp/>GL_COMPILE_STATUS,<sp/>&amp;shaderStatus);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shaderStatus<sp/>!=<sp/>GL_TRUE)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>infoLogLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLchar*<sp/>infoLogData<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>length<sp/>of<sp/>the<sp/>shader&apos;s<sp/>error<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderiv(shaderId,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;infoLogLength);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>some<sp/>memory<sp/>to<sp/>temporarilt<sp/>store<sp/>the<sp/>log<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoLogData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLchar[infoLogLength+1];<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>null-termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoLogData[infoLogLength]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(shaderId,<sp/>infoLogLength,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>infoLogData);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1a3f10ca43cace5624eed676aa775f3174" kindref="member">LS_LOG_ERR</ref>(</highlight><highlight class="stringliteral">&quot;\tShader<sp/>Compilation<sp/>error:\n&quot;</highlight><highlight class="normal">,<sp/>infoLogData,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>infoLogData;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(shaderId);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>objectId<sp/>=<sp/>shaderId;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1af694eceb659d9266fd76327d06db65b4" kindref="member">LS_LOG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;\tSuccessfully<sp/>loaded<sp/>a<sp/>shader<sp/>object.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>a<sp/>shader&apos;s<sp/>GPU-assigned<sp/>ID</highlight></codeline>
<codeline lineno="104"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;shader_stage_t<sp/>shaderType&gt;</highlight></codeline>
<codeline lineno="106" refid="classls_1_1draw_1_1shader_object_1a41d7300a897303975c80cf2eaab9249c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>GLuint<sp/><ref refid="classls_1_1draw_1_1shader_object_1a41d7300a897303975c80cf2eaab9249c" kindref="member">shaderObject&lt;shaderType&gt;::getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objectId;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>draw<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ls<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/shaderObject_impl.h"/>
  </compounddef>
</doxygen>
