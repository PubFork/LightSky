<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="mesh__impl_8h" kind="file">
    <compoundname>mesh_impl.h</compoundname>
    <includedby refid="mesh_8h" local="yes">C:/Users/miles/C++/projects/LightSky/lightsky/draw/mesh.h</includedby>
    <invincdepgraph>
      <node id="922">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/lightsky.h</label>
        <link refid="lightsky_8h"/>
        <childnode refid="923" relation="include">
        </childnode>
      </node>
      <node id="926">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/sceneManager.cpp</label>
        <link refid="scene_manager_8cpp"/>
      </node>
      <node id="921">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/draw.h</label>
        <link refid="draw_8h"/>
        <childnode refid="922" relation="include">
        </childnode>
      </node>
      <node id="924">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/meshModel.h</label>
        <link refid="mesh_model_8h"/>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
      </node>
      <node id="927">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/meshModel.cpp</label>
        <link refid="mesh_model_8cpp"/>
      </node>
      <node id="928">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/mesh.cpp</label>
        <link refid="mesh_8cpp"/>
      </node>
      <node id="920">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
      </node>
      <node id="929">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/meshResource.cpp</label>
        <link refid="mesh_resource_8cpp"/>
      </node>
      <node id="925">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/sceneManager.h</label>
        <link refid="scene_manager_8h"/>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
      </node>
      <node id="919">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/mesh_impl.h</label>
        <link refid="mesh_impl.h"/>
        <childnode refid="920" relation="include">
        </childnode>
      </node>
      <node id="923">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/src/lightsky.cpp</label>
        <link refid="lightsky_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1draw">ls::draw</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">draw<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>an<sp/>general<sp/>identification<sp/>to<sp/>be<sp/>used<sp/>for<sp/>this<sp/>object</highlight></codeline>
<codeline lineno="7"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classls_1_1draw_1_1mesh_1abf18de6bbee55129e03def2e01b4162e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_1abf18de6bbee55129e03def2e01b4162e" kindref="member">mesh::getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vbo.getId();</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>Unload<sp/>all<sp/>GPU-based<sp/>resource<sp/>that<sp/>are<sp/>used<sp/>by<sp/>*this;</highlight></codeline>
<codeline lineno="14"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classls_1_1draw_1_1mesh_1aecc0faf7d2061c5882121e5bb778b15f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_1aecc0faf7d2061c5882121e5bb778b15f" kindref="member">mesh::terminate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>vbo.terminate();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>numVertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>number<sp/>of<sp/>vertices<sp/>contained<sp/>within<sp/>this<sp/>mesh<sp/>object&apos;s<sp/>VBO.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classls_1_1draw_1_1mesh_1a05d2ae8850e7d0b887c0e4300de4a6d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_1a05d2ae8850e7d0b887c0e4300de4a6d2" kindref="member">mesh::getNumVertices</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numVertices;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>current<sp/>Draw<sp/>Mode<sp/>for<sp/>this<sp/>mesh.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classls_1_1draw_1_1mesh_1a110476a35cd95eee211793819d64189d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacels_1_1draw_1ae8e45123197ab63f5b0f34a1913e5546" kindref="member">draw_mode_t</ref><sp/><ref refid="classls_1_1draw_1_1mesh_1a110476a35cd95eee211793819d64189d" kindref="member">mesh::getDrawMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>drawMode;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>method<sp/>of<sp/>drawing<sp/>that<sp/>should<sp/>be<sp/>used<sp/>for<sp/>this<sp/>mesh.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classls_1_1draw_1_1mesh_1a67fc002e4577323079221a38f198bc10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1mesh_1a67fc002e4577323079221a38f198bc10" kindref="member">mesh::setDrawMode</ref>(<ref refid="namespacels_1_1draw_1ae8e45123197ab63f5b0f34a1913e5546" kindref="member">draw_mode_t</ref><sp/>dm)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>drawMode<sp/>=<sp/>dm;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>maximum<sp/>vertex<sp/>bounds<sp/>for<sp/>this<sp/>mesh.</highlight></codeline>
<codeline lineno="43"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classls_1_1draw_1_1mesh_1a38187a087b97195d5e49df6e4ac34739" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1bounding_box" kindref="compound">boundingBox</ref>&amp;<sp/><ref refid="classls_1_1draw_1_1mesh_1a38187a087b97195d5e49df6e4ac34739" kindref="member">mesh::getBounds</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bounds;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>draw<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ls<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/generic/mesh_impl.h"/>
  </compounddef>
</doxygen>
