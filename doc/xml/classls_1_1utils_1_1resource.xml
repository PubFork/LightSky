<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classls_1_1utils_1_1resource" kind="class" prot="public" abstract="yes">
    <compoundname>ls::utils::resource</compoundname>
    <derivedcompoundref refid="classls_1_1draw_1_1font_resource" prot="public" virt="non-virtual">ls::draw::fontResource</derivedcompoundref>
    <derivedcompoundref refid="classls_1_1draw_1_1image_resource" prot="public" virt="non-virtual">ls::draw::imageResource</derivedcompoundref>
    <derivedcompoundref refid="classls_1_1draw_1_1mesh_resource" prot="public" virt="non-virtual">ls::draw::meshResource</derivedcompoundref>
    <derivedcompoundref refid="classls_1_1utils_1_1data_resource" prot="public" virt="non-virtual">ls::utils::dataResource</derivedcompoundref>
    <includes refid="resource_8h" local="no">resource.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classls_1_1utils_1_1resource_1a6d51ff840102e455c80b6a8dbc15e326" prot="protected" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ls::utils::resource::pData</definition>
        <argsstring></argsstring>
        <name>pData</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pData is a pointer to an array of bytes that hold a complete resource in RAM. Data is automatically freed during a file object&apos;s destruction but can also be freed by calling &quot;unload().&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="36" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classls_1_1utils_1_1resource_1a6748a8528cc1af299d511d9a2f8a74ce" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long ls::utils::resource::dataSize</definition>
        <argsstring></argsstring>
        <name>dataSize</name>
        <initializer>= 0l</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dataSize holds the current size, in bytes, of the memory being used by pData. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="42" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a343735f471d08b7e3e1a71f0ff358158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::utils::resource::resource</definition>
        <argsstring>()=default</argsstring>
        <name>resource</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes all members in *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a4211e2fc500db81a83870493e86ffbee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::utils::resource::resource</definition>
        <argsstring>(const resource &amp;r)=delete</argsstring>
        <name>resource</name>
        <param>
          <type>const <ref refid="classls_1_1utils_1_1resource" kindref="compound">resource</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Attempts to copy all data from the source operand into *this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant reference to a resource object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a1395afc3c010934708bbc769fc0b0e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::utils::resource::resource</definition>
        <argsstring>(resource &amp;&amp;r)=delete</argsstring>
        <name>resource</name>
        <param>
          <type><ref refid="classls_1_1utils_1_1resource" kindref="compound">resource</ref> &amp;&amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Move all memory from the source object into *this. No copies are performed during this operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>An r-value reference to a resource object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a1e7c76b1fce42a50b8605d947cc7e736" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type></type>
        <definition>ls::utils::resource::~resource</definition>
        <argsstring>()=0</argsstring>
        <name>~resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. Make sure to call &quot;unload()&quot; before an object goes out of scope. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="78" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/src/resource.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1aa13ad61fc6557eae016bd09a0f03423a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1utils_1_1resource" kindref="compound">resource</ref> &amp;</type>
        <definition>resource&amp; ls::utils::resource::operator=</definition>
        <argsstring>(const resource &amp;r)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classls_1_1utils_1_1resource" kindref="compound">resource</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Copy operator. </para>        </briefdescription>
        <detaileddescription>
<para>Attempts to copy all data from the source operand into *this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant reference to a resource object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a9cd97e981d5fbbc17d645a0fa94c5e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1utils_1_1resource" kindref="compound">resource</ref> &amp;</type>
        <definition>resource&amp; ls::utils::resource::operator=</definition>
        <argsstring>(resource &amp;&amp;r)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classls_1_1utils_1_1resource" kindref="compound">resource</ref> &amp;&amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Move operator. </para>        </briefdescription>
        <detaileddescription>
<para>Move all memory from the source object into *this. No copies are performed during this operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>An r-value reference to a resource object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1abc6a808606df0e4ca912f228f2a41aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool ls::utils::resource::loadFile</definition>
        <argsstring>(const std::string &amp;filename)=0</argsstring>
        <name>loadFile</name>
        <reimplementedby refid="classls_1_1utils_1_1data_resource_1aea8343146dd511f11536418f765b4933">loadFile</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1mesh_resource_1a2cce6a75f7fbc3ed63c273053d32bb68">loadFile</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1image_resource_1afe1bdb8de9e6133719e538b15068adde">loadFile</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1font_resource_1ac0a8c50623e08de5adb403e0176a05c4">loadFile</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A string object containing the relative path name to a file that should be loadable into memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file was successfully loaded. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a982c2e94e4723d6d68153a4353c656f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ls::utils::resource::loadFile</definition>
        <argsstring>(const std::wstring &amp;filename)</argsstring>
        <name>loadFile</name>
        <reimplementedby refid="classls_1_1draw_1_1font_resource_1a4ea643c3666bc0a0eaa50f31502a4c29">loadFile</reimplementedby>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a file using a c-style wide string. </para>        </briefdescription>
        <detaileddescription>
<para>This method merely converts the filename into a multi-byte string and calls &quot;openFile()&quot; using the ANSI equivalent string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A string object containing the relative path name to a file that should be loadable into memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file was successfully loaded. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="128" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/generic/resource_impl.h" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1ad07e11bc2ef3538a2444eb804114a2ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool ls::utils::resource::saveFile</definition>
        <argsstring>(const std::string &amp;filename) const =0</argsstring>
        <name>saveFile</name>
        <reimplementedby refid="classls_1_1utils_1_1data_resource_1a61b72216fc11814083bbfd99f6625584">saveFile</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1mesh_resource_1af0a670bcf9f882d4f01a1f4222fc0ce0">saveFile</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1image_resource_1a96961e944a8c32123237e154faeb19c7">saveFile</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1font_resource_1a399d865e1c2c42b84e293e6e1608df9d">saveFile</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Save a file. </para>        </briefdescription>
        <detaileddescription>
<para>Use this method to save data to a file, specific to the type of resource used by derived classes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A string object containing the relative path name to a file that should be saved to the computer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file was successfully saved. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1a8f0ccf4c1548983b42fcbb8054ee9339" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ls::utils::resource::saveFile</definition>
        <argsstring>(const std::wstring &amp;filename) const </argsstring>
        <name>saveFile</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Save a file using a c-style string of wide (UTF-8) characters. </para>        </briefdescription>
        <detaileddescription>
<para>This method merely converts the filename into a multi-byte string and calls &quot;saveFile()&quot; using the ANSI equivalent string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A string object containing the relative path name to a file that should be saved to the computer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file was successfully saved. False if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="156" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/generic/resource_impl.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1ae7de856e2b33910059d2e81d548e57eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ls::utils::resource::unload</definition>
        <argsstring>()=0</argsstring>
        <name>unload</name>
        <reimplementedby refid="classls_1_1utils_1_1data_resource_1aeba2732e6dba423a4e1ab1f1b552294e">unload</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1mesh_resource_1ae3312b232d670164997ed4e7e57ae718">unload</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1image_resource_1a2cb1936be8ee26a7c6aca20fd3c27158">unload</reimplementedby>
        <reimplementedby refid="classls_1_1draw_1_1font_resource_1ac44b470ddbecec262d9792a78508fb8b">unload</reimplementedby>
        <briefdescription>
<para>Unload. </para>        </briefdescription>
        <detaileddescription>
<para>Free all memory used by *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1ae8c73df0e1904ef69c4473d253c07996" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>long</type>
        <definition>long ls::utils::resource::getByteSize</definition>
        <argsstring>() const </argsstring>
        <name>getByteSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size, in bytes, of the current file loaded into memory.</para><para><simplesect kind="return"><para>a long integral type, used to determine how many bytes had been loaded from a file. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="171" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/generic/resource_impl.h" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1utils_1_1resource_1ac7ea69ade647fad36ccf0ba13d72e5c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void * ls::utils::resource::getData</definition>
        <argsstring>() const </argsstring>
        <name>getData</name>
        <reimplementedby refid="classls_1_1draw_1_1image_resource_1abb855374f639243a2d766637c58edbe3">getData</reimplementedby>
        <briefdescription>
<para>Get the raw, loaded, data contained within *this. </para>        </briefdescription>
        <detaileddescription>
<para>This method may be overridden by derived classes in order to provide data specific to a certain module&apos;s needs. In such a case, please see the associated documentation in order to determine how to use this method.</para><para><simplesect kind="return"><para>a pointer to a chunk of data loaded from a file. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="183" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/generic/resource_impl.h" bodystart="15" bodyend="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic file/resource abstraction. </para>    </briefdescription>
    <detaileddescription>
<para>Resource Objects can open a file by calling either openFile() or <ref refid="classls_1_1utils_1_1resource_1ad07e11bc2ef3538a2444eb804114a2ef" kindref="member">saveFile()</ref> using a wide character string, The function merely converts the wide string into a multi-byte character string, then delegates the rest of the file operation to the c-string openFile/closeFile methods. This means that if this class is derived from, there is little need to overload the wide-string methods. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="93">
        <label>ls::utils::dataResource</label>
        <link refid="classls_1_1utils_1_1data_resource"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>ls::draw::fontResource</label>
        <link refid="classls_1_1draw_1_1font_resource"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>ls::draw::imageResource</label>
        <link refid="classls_1_1draw_1_1image_resource"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>ls::utils::resource</label>
        <link refid="classls_1_1utils_1_1resource"/>
      </node>
      <node id="92">
        <label>ls::draw::meshResource</label>
        <link refid="classls_1_1draw_1_1mesh_resource"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" line="29" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/utils/resource.h" bodystart="29" bodyend="184"/>
    <listofallmembers>
      <member refid="classls_1_1utils_1_1resource_1a6748a8528cc1af299d511d9a2f8a74ce" prot="protected" virt="non-virtual"><scope>ls::utils::resource</scope><name>dataSize</name></member>
      <member refid="classls_1_1utils_1_1resource_1ae8c73df0e1904ef69c4473d253c07996" prot="public" virt="virtual"><scope>ls::utils::resource</scope><name>getByteSize</name></member>
      <member refid="classls_1_1utils_1_1resource_1ac7ea69ade647fad36ccf0ba13d72e5c1" prot="public" virt="virtual"><scope>ls::utils::resource</scope><name>getData</name></member>
      <member refid="classls_1_1utils_1_1resource_1abc6a808606df0e4ca912f228f2a41aa7" prot="public" virt="pure-virtual"><scope>ls::utils::resource</scope><name>loadFile</name></member>
      <member refid="classls_1_1utils_1_1resource_1a982c2e94e4723d6d68153a4353c656f3" prot="public" virt="virtual"><scope>ls::utils::resource</scope><name>loadFile</name></member>
      <member refid="classls_1_1utils_1_1resource_1aa13ad61fc6557eae016bd09a0f03423a" prot="public" virt="non-virtual"><scope>ls::utils::resource</scope><name>operator=</name></member>
      <member refid="classls_1_1utils_1_1resource_1a9cd97e981d5fbbc17d645a0fa94c5e3b" prot="public" virt="non-virtual"><scope>ls::utils::resource</scope><name>operator=</name></member>
      <member refid="classls_1_1utils_1_1resource_1a6d51ff840102e455c80b6a8dbc15e326" prot="protected" virt="non-virtual"><scope>ls::utils::resource</scope><name>pData</name></member>
      <member refid="classls_1_1utils_1_1resource_1a343735f471d08b7e3e1a71f0ff358158" prot="public" virt="non-virtual"><scope>ls::utils::resource</scope><name>resource</name></member>
      <member refid="classls_1_1utils_1_1resource_1a4211e2fc500db81a83870493e86ffbee" prot="public" virt="non-virtual"><scope>ls::utils::resource</scope><name>resource</name></member>
      <member refid="classls_1_1utils_1_1resource_1a1395afc3c010934708bbc769fc0b0e80" prot="public" virt="non-virtual"><scope>ls::utils::resource</scope><name>resource</name></member>
      <member refid="classls_1_1utils_1_1resource_1ad07e11bc2ef3538a2444eb804114a2ef" prot="public" virt="pure-virtual"><scope>ls::utils::resource</scope><name>saveFile</name></member>
      <member refid="classls_1_1utils_1_1resource_1a8f0ccf4c1548983b42fcbb8054ee9339" prot="public" virt="virtual"><scope>ls::utils::resource</scope><name>saveFile</name></member>
      <member refid="classls_1_1utils_1_1resource_1ae7de856e2b33910059d2e81d548e57eb" prot="public" virt="pure-virtual"><scope>ls::utils::resource</scope><name>unload</name></member>
      <member refid="classls_1_1utils_1_1resource_1a1e7c76b1fce42a50b8605d947cc7e736" prot="public" virt="pure-virtual"><scope>ls::utils::resource</scope><name>~resource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
