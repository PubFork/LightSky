<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classls_1_1math_1_1perlin_noise__t" kind="class" prot="public">
    <compoundname>ls::math::perlinNoise_t</compoundname>
    <includes refid="perlin_noise_8h" local="no">perlinNoise.h</includes>
    <templateparamlist>
      <param>
        <type>typename num_t</type>
        <defval>float</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classls_1_1math_1_1perlin_noise__t_1aa31306a71605b4f3360713e27f86f875" prot="private" static="no" mutable="no">
        <type><ref refid="classls_1_1utils_1_1random_num" kindref="compound">utils::randomNum</ref> *</type>
        <definition>utils::randomNum* ls::math::perlinNoise_t&lt; num_t &gt;::prng</definition>
        <argsstring></argsstring>
        <name>prng</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a pseudo-random number generator that will be used to generate random noise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="33" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classls_1_1math_1_1perlin_noise__t_1a71262477e7f125f7efe2a9cf08e2976b" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* ls::math::perlinNoise_t&lt; num_t &gt;::permutations</definition>
        <argsstring></argsstring>
        <name>permutations</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of 512 randomly ordered integers that are used to generate noise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="39" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1af63426f4a1bf8b038a9dc3497ca664f3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ls::math::perlinNoise_t&lt; num_t &gt;::fade</definition>
        <argsstring>(double)</argsstring>
        <name>fade</name>
        <param>
          <type>double</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to blend different noise values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_t</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>num_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="48" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a866c96611c7465f3c805382a4b2f0f57" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ls::math::perlinNoise_t&lt; num_t &gt;::lerp</definition>
        <argsstring>(double a, double b, double x)</argsstring>
        <name>lerp</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Linearly interpolate two values over a certain percentage.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be interpolated to B.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference value that A will interpolate towards.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The percent to interpolate A-&gt;B</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A linear interpolation of A-&gt;B </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="64" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1abb63d67a5389f70cf6b82a31fac6ed16" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ls::math::perlinNoise_t&lt; num_t &gt;::grad</definition>
        <argsstring>(int hash, double x, double y, double z)</argsstring>
        <name>grad</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a gradient value based on a hash function at the points x, y, and z.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A gradient value that will assist in smoothly transitioning from one set of points to another. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="81" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="152" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a3128656d264cfc2ebf1d61accbd002e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::math::perlinNoise_t&lt; num_t &gt;::perlinNoise_t</definition>
        <argsstring>()</argsstring>
        <name>perlinNoise_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="87" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1ad2b988519b70a08bc922d530bfe6c138" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::math::perlinNoise_t&lt; num_t &gt;::perlinNoise_t</definition>
        <argsstring>(unsigned long s)</argsstring>
        <name>perlinNoise_t</name>
        <param>
          <type>unsigned long</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>A long, unsigned integral value that will be used to seed the random number generator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="96" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a6ef92510063d0c508ecb10588165c236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::math::perlinNoise_t&lt; num_t &gt;::perlinNoise_t</definition>
        <argsstring>(const perlinNoise_t &amp;)</argsstring>
        <name>perlinNoise_t</name>
        <param>
          <type>const <ref refid="classls_1_1math_1_1perlin_noise__t" kindref="compound">perlinNoise_t</ref> &amp;</type>
          <defname>pn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>constant reference to another Perlin noise object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="103" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1aa8081c9460435beb21e97e9eace454e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::math::perlinNoise_t&lt; num_t &gt;::perlinNoise_t</definition>
        <argsstring>(perlinNoise_t &amp;&amp;)</argsstring>
        <name>perlinNoise_t</name>
        <param>
          <type><ref refid="classls_1_1math_1_1perlin_noise__t" kindref="compound">perlinNoise_t</ref> &amp;&amp;</type>
          <defname>pn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move Constructor Moves all data from the input parameter into *this. No copies are performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>An</parametername>
</parameternamelist>
<parameterdescription>
<para>R-Value reference to a Perlin noise object that&apos;s about to go out of scope. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="113" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a4624be762a1617a2caec7d40080ebd79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ls::math::perlinNoise_t&lt; num_t &gt;::~perlinNoise_t</definition>
        <argsstring>()</argsstring>
        <name>~perlinNoise_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor Frees all memory used by *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="119" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a4fb1c6ab25eab5844376ebf76a837e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1math_1_1perlin_noise__t" kindref="compound">perlinNoise_t</ref> &amp;</type>
        <definition>perlinNoise_t&lt; num_t &gt; &amp; ls::math::perlinNoise_t&lt; num_t &gt;::operator=</definition>
        <argsstring>(const perlinNoise_t &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classls_1_1math_1_1perlin_noise__t" kindref="compound">perlinNoise_t</ref> &amp;</type>
          <defname>pn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy Operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>constant reference to another Perlin noise object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="128" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a4cd0de0dd43357ec662e38f67eaa38b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classls_1_1math_1_1perlin_noise__t" kindref="compound">perlinNoise_t</ref> &amp;</type>
        <definition>perlinNoise_t&lt; num_t &gt; &amp; ls::math::perlinNoise_t&lt; num_t &gt;::operator=</definition>
        <argsstring>(perlinNoise_t &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classls_1_1math_1_1perlin_noise__t" kindref="compound">perlinNoise_t</ref> &amp;&amp;</type>
          <defname>pn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move Operator</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>An</parametername>
</parameternamelist>
<parameterdescription>
<para>R-Value reference to a Perlin noise object that&apos;s about to go out of scope.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to *this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="138" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="84" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1ab2f24529a8a3fe6bfcea98ef3a8489ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ls::math::perlinNoise_t&lt; num_t &gt;::seed</definition>
        <argsstring>()</argsstring>
        <name>seed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed the random number generator in order to generate new noise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="143" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1afc4c5849236122d55900813f7efdc6da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ls::math::perlinNoise_t&lt; num_t &gt;::seed</definition>
        <argsstring>(unsigned long s)</argsstring>
        <name>seed</name>
        <param>
          <type>unsigned long</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Seed the random number generator in order to generate new noise.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>A long, unsigned integral value that will be used to seed the random number generator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="152" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="100" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a0d6f3f1d07accd91d37fa3c2dec33d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename point_t</type>
          </param>
        </templateparamlist>
        <type>num_t</type>
        <definition>num_t ls::math::perlinNoise_t&lt; num_t &gt;::getNoise</definition>
        <argsstring>(const vec3_t&lt; point_t &gt; &amp;point)</argsstring>
        <name>getNoise</name>
        <param>
          <type>const <ref refid="structls_1_1math_1_1vec3__t" kindref="compound">vec3_t</ref>&lt; point_t &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a [pseudo] randomly generated noise value within a 3D Cartesian coordinate space.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>A point within a linear 3D space from which a noise value will be calculated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Perlin noise value, calculated at the point specified by the input parameter. This value will be between [-1,1]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="166" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="185" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classls_1_1math_1_1perlin_noise__t_1a4cae2e0f4dcbd57c55165d29a90f023a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>num_t</type>
        <definition>num_t ls::math::perlinNoise_t&lt; num_t &gt;::getOctaveNoise</definition>
        <argsstring>(const vec3_t&lt; num_t &gt; &amp;point, unsigned octaves, num_t persistance)</argsstring>
        <name>getOctaveNoise</name>
        <param>
          <type>const <ref refid="structls_1_1math_1_1vec3__t" kindref="compound">vec3_t</ref>&lt; num_t &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>octaves</declname>
        </param>
        <param>
          <type>num_t</type>
          <declname>persistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a [pseudo] randomly generated noise value within a 3D Cartesian coordinate space. This value will be modified by a frequency specified by the number of octaves and persistence provided.</para><para><simplesect kind="see"><para><ulink url="http://freespace.virgin.net/hugo.elias/models/m_perlin.htm">http://freespace.virgin.net/hugo.elias/models/m_perlin.htm</ulink> for more details.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>A point within a linear 3D space from which a noise value will be calculated.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>octaves</parametername>
</parameternamelist>
<parameterdescription>
<para>The inverse of the number of times that the noise function will be added onto itself (for example, 1/2, 1/4, 1/sqrt(2), etc.).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>persistance</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of effect that the noise value at a given point will have on other noise values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Perlin noise value, calculated at the point specified by the input parameter. This value will be between [-1,1]. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="191" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/generic/perlinNoise_impl.h" bodystart="225" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple class to generate Perlin noise. </para>    </briefdescription>
    <detaileddescription>
<para>Most of the code for this is based on a tutorial found here: <ulink url="http://flafla2.github.io/2014/08/09/perlinnoise.html">http://flafla2.github.io/2014/08/09/perlinnoise.html</ulink> </para>    </detaileddescription>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" line="27" column="1" bodyfile="C:/Users/miles/C++/projects/LightSky/lightsky/math/perlinNoise.h" bodystart="27" bodyend="192"/>
    <listofallmembers>
      <member refid="classls_1_1math_1_1perlin_noise__t_1af63426f4a1bf8b038a9dc3497ca664f3" prot="private" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>fade</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a0d6f3f1d07accd91d37fa3c2dec33d43" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>getNoise</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a4cae2e0f4dcbd57c55165d29a90f023a" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>getOctaveNoise</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1abb63d67a5389f70cf6b82a31fac6ed16" prot="private" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>grad</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a866c96611c7465f3c805382a4b2f0f57" prot="private" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>lerp</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a4fb1c6ab25eab5844376ebf76a837e8b" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>operator=</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a4cd0de0dd43357ec662e38f67eaa38b3" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>operator=</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a3128656d264cfc2ebf1d61accbd002e2" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>perlinNoise_t</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1ad2b988519b70a08bc922d530bfe6c138" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>perlinNoise_t</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a6ef92510063d0c508ecb10588165c236" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>perlinNoise_t</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1aa8081c9460435beb21e97e9eace454e4" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>perlinNoise_t</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a71262477e7f125f7efe2a9cf08e2976b" prot="private" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>permutations</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1aa31306a71605b4f3360713e27f86f875" prot="private" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>prng</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1ab2f24529a8a3fe6bfcea98ef3a8489ee" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>seed</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1afc4c5849236122d55900813f7efdc6da" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>seed</name></member>
      <member refid="classls_1_1math_1_1perlin_noise__t_1a4624be762a1617a2caec7d40080ebd79" prot="public" virt="non-virtual"><scope>ls::math::perlinNoise_t</scope><name>~perlinNoise_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
