<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="matrix_stack_8cpp" kind="file">
    <compoundname>matrixStack.cpp</compoundname>
    <includes local="no">utility</includes>
    <includes refid="matrix_stack_8h" local="yes">lightsky/draw/matrixStack.h</includes>
    <incdepgraph>
      <node id="2760">
        <label>lightsky/math/vec3.h</label>
        <link refid="vec3_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2761" relation="include">
        </childnode>
      </node>
      <node id="2740">
        <label>lightsky/utils/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="2741" relation="include">
        </childnode>
        <childnode refid="2742" relation="include">
        </childnode>
      </node>
      <node id="2746">
        <label>lightsky/math/math.h</label>
        <link refid="math_8h"/>
        <childnode refid="2747" relation="include">
        </childnode>
        <childnode refid="2748" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2753" relation="include">
        </childnode>
        <childnode refid="2759" relation="include">
        </childnode>
        <childnode refid="2763" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
        <childnode refid="2756" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2769" relation="include">
        </childnode>
        <childnode refid="2770" relation="include">
        </childnode>
        <childnode refid="2773" relation="include">
        </childnode>
        <childnode refid="2775" relation="include">
        </childnode>
      </node>
      <node id="2768">
        <label>lightsky/math/generic/quat_impl.h</label>
        <link refid="quat__impl_8h"/>
      </node>
      <node id="2735">
        <label>lightsky/setup/compiler.h</label>
        <link refid="compiler_8h"/>
      </node>
      <node id="2741">
        <label>cstdint</label>
      </node>
      <node id="2737">
        <label>lightsky/setup/os.h</label>
        <link refid="os_8h"/>
      </node>
      <node id="2733">
        <label>lightsky/draw/setup.h</label>
        <link refid="draw_2setup_8h"/>
        <childnode refid="2734" relation="include">
        </childnode>
        <childnode refid="2739" relation="include">
        </childnode>
        <childnode refid="2740" relation="include">
        </childnode>
        <childnode refid="2743" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
      </node>
      <node id="2778">
        <label>lightsky/utils/randomNum.h</label>
        <link refid="random_num_8h"/>
      </node>
      <node id="2773">
        <label>lightsky/math/mat_utils.h</label>
        <link refid="mat__utils_8h"/>
        <childnode refid="2770" relation="include">
        </childnode>
        <childnode refid="2753" relation="include">
        </childnode>
        <childnode refid="2759" relation="include">
        </childnode>
        <childnode refid="2763" relation="include">
        </childnode>
        <childnode refid="2774" relation="include">
        </childnode>
      </node>
      <node id="2750">
        <label>lightsky/math/fixed.h</label>
        <link refid="fixed_8h"/>
        <childnode refid="2751" relation="include">
        </childnode>
        <childnode refid="2741" relation="include">
        </childnode>
        <childnode refid="2730" relation="include">
        </childnode>
        <childnode refid="2747" relation="include">
        </childnode>
        <childnode refid="2748" relation="include">
        </childnode>
        <childnode refid="2752" relation="include">
        </childnode>
      </node>
      <node id="2729">
        <label>C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/matrixStack.cpp</label>
        <link refid="matrixStack.cpp"/>
        <childnode refid="2730" relation="include">
        </childnode>
        <childnode refid="2731" relation="include">
        </childnode>
      </node>
      <node id="2731">
        <label>lightsky/draw/matrixStack.h</label>
        <link refid="matrix_stack_8h"/>
        <childnode refid="2732" relation="include">
        </childnode>
        <childnode refid="2733" relation="include">
        </childnode>
        <childnode refid="2780" relation="include">
        </childnode>
      </node>
      <node id="2752">
        <label>lightsky/math/generic/fixed_impl.h</label>
        <link refid="fixed__impl_8h"/>
      </node>
      <node id="2766">
        <label>lightsky/math/generic/mat4_impl.h</label>
        <link refid="mat4__impl_8h"/>
      </node>
      <node id="2753">
        <label>lightsky/math/mat2.h</label>
        <link refid="mat2_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2756" relation="include">
        </childnode>
        <childnode refid="2758" relation="include">
        </childnode>
      </node>
      <node id="2749">
        <label>cmath</label>
      </node>
      <node id="2769">
        <label>lightsky/math/quat_utils.h</label>
        <link refid="quat__utils_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2759" relation="include">
        </childnode>
        <childnode refid="2763" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
        <childnode refid="2770" relation="include">
        </childnode>
        <childnode refid="2772" relation="include">
        </childnode>
      </node>
      <node id="2755">
        <label>lightsky/math/generic/scalar_utils_impl.h</label>
        <link refid="scalar__utils__impl_8h"/>
      </node>
      <node id="2764">
        <label>lightsky/math/vec4.h</label>
        <link refid="vec4_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2765" relation="include">
        </childnode>
      </node>
      <node id="2771">
        <label>lightsky/math/generic/vec_utils_impl.h</label>
        <link refid="vec__utils__impl_8h"/>
      </node>
      <node id="2762">
        <label>lightsky/math/generic/mat3_impl.h</label>
        <link refid="mat3__impl_8h"/>
      </node>
      <node id="2745">
        <label>lightsky/utils/generic/log_impl.h</label>
        <link refid="log__impl_8h"/>
      </node>
      <node id="2765">
        <label>lightsky/math/generic/vec4_impl.h</label>
        <link refid="vec4__impl_8h"/>
      </node>
      <node id="2738">
        <label>lightsky/setup/macros.h</label>
        <link refid="macros_8h"/>
      </node>
      <node id="2758">
        <label>lightsky/math/generic/mat2_impl.h</label>
        <link refid="mat2__impl_8h"/>
      </node>
      <node id="2775">
        <label>lightsky/math/perlinNoise.h</label>
        <link refid="perlin_noise_8h"/>
        <childnode refid="2776" relation="include">
        </childnode>
        <childnode refid="2777" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2778" relation="include">
        </childnode>
        <childnode refid="2779" relation="include">
        </childnode>
      </node>
      <node id="2761">
        <label>lightsky/math/generic/vec3_impl.h</label>
        <link refid="vec3__impl_8h"/>
      </node>
      <node id="2747">
        <label>lightsky/math/setup.h</label>
        <link refid="math_2setup_8h"/>
        <childnode refid="2734" relation="include">
        </childnode>
      </node>
      <node id="2759">
        <label>lightsky/math/mat3.h</label>
        <link refid="mat3_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2762" relation="include">
        </childnode>
      </node>
      <node id="2742">
        <label>lightsky/utils/generic/hash_impl.h</label>
        <link refid="hash__impl_8h"/>
      </node>
      <node id="2757">
        <label>lightsky/math/generic/vec2_impl.h</label>
        <link refid="vec2__impl_8h"/>
      </node>
      <node id="2743">
        <label>lightsky/utils/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="2744" relation="include">
        </childnode>
        <childnode refid="2745" relation="include">
        </childnode>
      </node>
      <node id="2767">
        <label>lightsky/math/quat.h</label>
        <link refid="quat_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2768" relation="include">
        </childnode>
      </node>
      <node id="2732">
        <label>stack</label>
      </node>
      <node id="2748">
        <label>lightsky/math/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2749" relation="include">
        </childnode>
        <childnode refid="2741" relation="include">
        </childnode>
      </node>
      <node id="2734">
        <label>lightsky/setup/setup.h</label>
        <link refid="setup_2setup_8h"/>
        <childnode refid="2735" relation="include">
        </childnode>
        <childnode refid="2736" relation="include">
        </childnode>
        <childnode refid="2737" relation="include">
        </childnode>
        <childnode refid="2738" relation="include">
        </childnode>
      </node>
      <node id="2730">
        <label>utility</label>
      </node>
      <node id="2774">
        <label>lightsky/math/generic/mat_utils_impl.h</label>
        <link refid="mat__utils__impl_8h"/>
      </node>
      <node id="2770">
        <label>lightsky/math/vec_utils.h</label>
        <link refid="vec__utils_8h"/>
        <childnode refid="2748" relation="include">
        </childnode>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2756" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2771" relation="include">
        </childnode>
      </node>
      <node id="2780">
        <label>lightsky/draw/generic/matrixStack_impl.h</label>
        <link refid="matrix_stack__impl_8h"/>
      </node>
      <node id="2763">
        <label>lightsky/math/mat4.h</label>
        <link refid="mat4_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2766" relation="include">
        </childnode>
      </node>
      <node id="2744">
        <label>iostream</label>
      </node>
      <node id="2756">
        <label>lightsky/math/vec2.h</label>
        <link refid="vec2_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2757" relation="include">
        </childnode>
      </node>
      <node id="2754">
        <label>lightsky/math/scalar_utils.h</label>
        <link refid="scalar__utils_8h"/>
        <childnode refid="2747" relation="include">
        </childnode>
        <childnode refid="2748" relation="include">
        </childnode>
        <childnode refid="2755" relation="include">
        </childnode>
      </node>
      <node id="2772">
        <label>lightsky/math/generic/quat_utils_impl.h</label>
        <link refid="quat__utils__impl_8h"/>
      </node>
      <node id="2751">
        <label>climits</label>
      </node>
      <node id="2776">
        <label>chrono</label>
      </node>
      <node id="2739">
        <label>lightsky/utils/assert.h</label>
        <link refid="assert_8h"/>
        <childnode refid="2738" relation="include">
        </childnode>
      </node>
      <node id="2777">
        <label>algorithm</label>
      </node>
      <node id="2736">
        <label>lightsky/setup/arch.h</label>
        <link refid="arch_8h"/>
      </node>
      <node id="2779">
        <label>lightsky/math/generic/perlinNoise_impl.h</label>
        <link refid="perlin_noise__impl_8h"/>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacels">ls</innernamespace>
    <innernamespace refid="namespacels_1_1draw">ls::draw</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/>matrixStack.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Miles<sp/>Lacey</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created<sp/>on<sp/>January<sp/>25,<sp/>2014,<sp/>12:00<sp/>PM</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_stack_8h" kindref="compound">lightsky/draw/matrixStack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacels" kindref="compound">ls</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">draw<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Constructor</highlight></codeline>
<codeline lineno="17"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classls_1_1draw_1_1matrix_stack_1ad79c5e40dfb5dffd4520f917a2f6adca" refkind="member"><highlight class="normal"><ref refid="classls_1_1draw_1_1matrix_stack_1ad79c5e40dfb5dffd4520f917a2f6adca" kindref="member">matrixStack::matrixStack</ref>()<sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stack&lt;math::mat4&gt;{},<sp/></highlight><highlight class="comment">//<sp/>projections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stack&lt;math::mat4&gt;{},<sp/></highlight><highlight class="comment">//<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stack&lt;math::mat4&gt;{}<sp/></highlight><highlight class="comment">//<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>mvpMatrix{math::mat4(1.f)},</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>vpMatrix{math::mat4(1.f)}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528abaa7e87b04aeac47d882cb097cdb14f4" kindref="member">MATRIX_USE_PROJECTION</ref>].push(math::mat4(1.f));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a8f712633b5b58b9cd3dcbb311f571f40" kindref="member">MATRIX_USE_VIEW</ref>].push(math::mat4(1.f));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a7af466298b733f93222a457cc5553fa6" kindref="member">MATRIX_USE_MODEL</ref>].push(math::mat4(1.f));</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Move<sp/>Constructor</highlight></codeline>
<codeline lineno="34"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="classls_1_1draw_1_1matrix_stack_1ad79c5e40dfb5dffd4520f917a2f6adca" kindref="member">matrixStack::matrixStack</ref>(matrixStack&amp;&amp;<sp/>ms)<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(ms.stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528abaa7e87b04aeac47d882cb097cdb14f4" kindref="member">MATRIX_USE_PROJECTION</ref>]),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(ms.stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a8f712633b5b58b9cd3dcbb311f571f40" kindref="member">MATRIX_USE_VIEW</ref>]),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(ms.stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a7af466298b733f93222a457cc5553fa6" kindref="member">MATRIX_USE_MODEL</ref>]),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>mvpMatrix{std::move(ms.mvpMatrix)},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>vpMatrix{std::move(ms.vpMatrix)}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Destructor</highlight></codeline>
<codeline lineno="47"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="classls_1_1draw_1_1matrix_stack_1a0c66a8ed534ced6adc29aa1fd87a1513" kindref="member">matrixStack::~matrixStack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Move<sp/>Operator</highlight></codeline>
<codeline lineno="53"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">matrixStack&amp;<sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a16f29a03b458686c1fd015d4c4faba77" kindref="member">matrixStack::operator =</ref>(matrixStack&amp;&amp;<sp/>ms)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528abaa7e87b04aeac47d882cb097cdb14f4" kindref="member">MATRIX_USE_PROJECTION</ref>]<sp/>=<sp/>std::move(ms.stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528abaa7e87b04aeac47d882cb097cdb14f4" kindref="member">MATRIX_USE_PROJECTION</ref>]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a8f712633b5b58b9cd3dcbb311f571f40" kindref="member">MATRIX_USE_VIEW</ref>]<sp/>=<sp/>std::move(ms.stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a8f712633b5b58b9cd3dcbb311f571f40" kindref="member">MATRIX_USE_VIEW</ref>]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a7af466298b733f93222a457cc5553fa6" kindref="member">MATRIX_USE_MODEL</ref>]<sp/>=<sp/>std::move(ms.stacks[<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a7af466298b733f93222a457cc5553fa6" kindref="member">MATRIX_USE_MODEL</ref>]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mvpMatrix<sp/>=<sp/>ms.mvpMatrix;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>vpMatrix<sp/>=<sp/>ms.vpMatrix;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Push<sp/>a<sp/>matrix<sp/>onto<sp/>the<sp/>stack,<sp/>multiplying<sp/>it<sp/>by<sp/>the<sp/>current<sp/>matrix</highlight></codeline>
<codeline lineno="67"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a05b0c05d3511211c7efc0b411527d4b3" kindref="member">matrixStack::pushMatrix</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>modes<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>invalid<sp/>matrix<sp/>types<sp/>are<sp/>being<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LS_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mt<sp/>&gt;=<sp/><ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a59c19e1ea7fb56d9305b3caf9e90c508" kindref="member">MATRIX_USE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1a3f10ca43cace5624eed676aa775f3174" kindref="member">LS_LOG_ERR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>matrix<sp/>type<sp/>pushed<sp/>onto<sp/>the<sp/>stack:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mt,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].push(m<sp/>*<sp/>stacks[mt].top());</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Push<sp/>the<sp/>identity<sp/>matrix<sp/>onto<sp/>the<sp/>stack</highlight></codeline>
<codeline lineno="82"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1ab153ea82ca0b1070c12981d0b189d9e3" kindref="member">matrixStack::pushIdentity</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>modes<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>invalid<sp/>matrix<sp/>types<sp/>are<sp/>being<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LS_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mt<sp/>&gt;=<sp/><ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a59c19e1ea7fb56d9305b3caf9e90c508" kindref="member">MATRIX_USE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1a3f10ca43cace5624eed676aa775f3174" kindref="member">LS_LOG_ERR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>matrix<sp/>type<sp/>pushed<sp/>onto<sp/>the<sp/>stack:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mt,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].push(math::mat4{1.f});</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>Push<sp/>a<sp/>matrix<sp/>onto<sp/>the<sp/>stack<sp/>without<sp/>multiplying<sp/>it<sp/>by<sp/>the<sp/>current<sp/>matrix.</highlight></codeline>
<codeline lineno="97"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a2158e56884a918698786570707a0cf52" kindref="member">matrixStack::emplaceMatrix</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>modes<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>invalid<sp/>matrix<sp/>types<sp/>are<sp/>being<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LS_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mt<sp/>&gt;=<sp/><ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a59c19e1ea7fb56d9305b3caf9e90c508" kindref="member">MATRIX_USE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1a3f10ca43cace5624eed676aa775f3174" kindref="member">LS_LOG_ERR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>matrix<sp/>type<sp/>pushed<sp/>onto<sp/>the<sp/>stack:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mt,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].push(m);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>Set<sp/>the<sp/>matrix<sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>to<sp/>the<sp/>one<sp/>passed<sp/>into<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="112"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a5c6c8474edbfdea259e0f77fc2c1c25a" kindref="member">matrixStack::loadMatrix</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::mat4&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].top()<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>Set<sp/>the<sp/>current<sp/>matrix<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>to<sp/>the<sp/>identity<sp/>matrix.</highlight></codeline>
<codeline lineno="119"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a6e5ff186ee46fdfe36c0872cf45796e7" kindref="member">matrixStack::loadIdentity</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].top()<sp/>=<sp/>math::mat4(1.f);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>Pop<sp/>a<sp/>matrix<sp/>from<sp/>the<sp/>stack.</highlight></codeline>
<codeline lineno="126"><highlight class="comment">-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classls_1_1draw_1_1matrix_stack_1a7b150612a642d89c0e4d97a34c8267fa" kindref="member">matrixStack::popMatrix</ref>(<ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528" kindref="member">matrix_use_t</ref><sp/>mt)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>modes<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>invalid<sp/>matrix<sp/>types<sp/>are<sp/>being<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>LS_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mt<sp/>&gt;=<sp/><ref refid="namespacels_1_1draw_1a3071c2ceac28fe33fdefea3804042528a59c19e1ea7fb56d9305b3caf9e90c508" kindref="member">MATRIX_USE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="draw_2setup_8h_1a3f10ca43cace5624eed676aa775f3174" kindref="member">LS_LOG_ERR</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>matrix<sp/>type<sp/>popped<sp/>off<sp/>the<sp/>stack:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mt,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>stacks[mt].pop();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stacks[mt].<ref refid="classls_1_1draw_1_1matrix_stack_1a962d7b8bdf878d362a63c14cf65f55b0" kindref="member">size</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stacks[mt].push(math::mat4{1.f});</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>draw<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>ls<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/miles/C++/projects/LightSky/lightsky/draw/src/matrixStack.cpp"/>
  </compounddef>
</doxygen>
