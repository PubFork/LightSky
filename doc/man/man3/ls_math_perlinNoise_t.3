.TH "ls::math::perlinNoise_t< num_t >" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::math::perlinNoise_t< num_t > \- 
.PP
Simple class to generate Perlin noise\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <perlinNoise\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBperlinNoise_t\fP ()"
.br
.ti -1c
.RI "\fBperlinNoise_t\fP (unsigned long s)"
.br
.ti -1c
.RI "\fBperlinNoise_t\fP (const \fBperlinNoise_t\fP &)"
.br
.ti -1c
.RI "\fBperlinNoise_t\fP (\fBperlinNoise_t\fP &&)"
.br
.ti -1c
.RI "\fB~perlinNoise_t\fP ()"
.br
.ti -1c
.RI "\fBperlinNoise_t\fP & \fBoperator=\fP (const \fBperlinNoise_t\fP &)"
.br
.ti -1c
.RI "\fBperlinNoise_t\fP & \fBoperator=\fP (\fBperlinNoise_t\fP &&)"
.br
.ti -1c
.RI "void \fBseed\fP ()"
.br
.ti -1c
.RI "void \fBseed\fP (unsigned long s)"
.br
.ti -1c
.RI "template<typename point_t > num_t \fBgetNoise\fP (const \fBvec3_t\fP< point_t > &point)"
.br
.ti -1c
.RI "num_t \fBgetOctaveNoise\fP (const \fBvec3_t\fP< num_t > &point, unsigned octaves, num_t persistance)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename num_t = float>class ls::math::perlinNoise_t< num_t >"
Simple class to generate Perlin noise\&. 

Most of the code for this is based on a tutorial found here: http://flafla2.github.io/2014/08/09/perlinnoise.html 
.PP
Definition at line 27 of file perlinNoise\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename num_t > \fBls::math::perlinNoise_t\fP< num_t >::\fBperlinNoise_t\fP ()"
Constructor 
.PP
Definition at line 20 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > \fBls::math::perlinNoise_t\fP< num_t >::\fBperlinNoise_t\fP (unsigned longs)\fC [explicit]\fP"
Seed Constructor
.PP
\fBParameters:\fP
.RS 4
\fIs\fP A long, unsigned integral value that will be used to seed the random number generator\&. 
.RE
.PP

.PP
Definition at line 28 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > \fBls::math::perlinNoise_t\fP< num_t >::\fBperlinNoise_t\fP (const \fBperlinNoise_t\fP< num_t > &pn)"
Copy Constructor
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to another Perlin noise object 
.RE
.PP

.PP
Definition at line 39 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > \fBls::math::perlinNoise_t\fP< num_t >::\fBperlinNoise_t\fP (\fBperlinNoise_t\fP< num_t > &&pn)"
Move Constructor Moves all data from the input parameter into *this\&. No copies are performed\&.
.PP
\fBParameters:\fP
.RS 4
\fIAn\fP R-Value reference to a Perlin noise object that's about to go out of scope\&. 
.RE
.PP

.PP
Definition at line 50 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > \fBls::math::perlinNoise_t\fP< num_t >::~\fBperlinNoise_t\fP ()"
Destructor Frees all memory used by *this\&. 
.PP
Definition at line 62 of file perlinNoise_impl\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename num_t > template<typename point_t > num_t \fBls::math::perlinNoise_t\fP< num_t >::getNoise (const \fBvec3_t\fP< point_t > &point)"
Get a [pseudo] randomly generated noise value within a 3D Cartesian coordinate space\&.
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP A point within a linear 3D space from which a noise value will be calculated\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A Perlin noise value, calculated at the point specified by the input parameter\&. This value will be between [-1,1]\&. 
.RE
.PP

.PP
Definition at line 185 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > num_t \fBls::math::perlinNoise_t\fP< num_t >::getOctaveNoise (const \fBvec3_t\fP< num_t > &point, unsignedoctaves, num_tpersistance)"
Get a [pseudo] randomly generated noise value within a 3D Cartesian coordinate space\&. This value will be modified by a frequency specified by the number of octaves and persistence provided\&.
.PP
\fBSee also:\fP
.RS 4
http://freespace.virgin.net/hugo.elias/models/m_perlin.htm for more details\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP A point within a linear 3D space from which a noise value will be calculated\&.
.br
\fIoctaves\fP The inverse of the number of times that the noise function will be added onto itself (for example, 1/2, 1/4, 1/sqrt(2), etc\&.)\&.
.br
\fIpersistance\fP The length of effect that the noise value at a given point will have on other noise values\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A Perlin noise value, calculated at the point specified by the input parameter\&. This value will be between [-1,1]\&. 
.RE
.PP

.PP
Definition at line 225 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > \fBperlinNoise_t\fP< num_t > & \fBls::math::perlinNoise_t\fP< num_t >::operator= (const \fBperlinNoise_t\fP< num_t > &pn)"
Copy Operator
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to another Perlin noise object
.RE
.PP
\fBReturns:\fP
.RS 4
A reference to *this\&. 
.RE
.PP

.PP
Definition at line 71 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > \fBperlinNoise_t\fP< num_t > & \fBls::math::perlinNoise_t\fP< num_t >::operator= (\fBperlinNoise_t\fP< num_t > &&pn)"
Move Operator
.PP
\fBParameters:\fP
.RS 4
\fIAn\fP R-Value reference to a Perlin noise object that's about to go out of scope\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A reference to *this\&. 
.RE
.PP

.PP
Definition at line 84 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > void \fBls::math::perlinNoise_t\fP< num_t >::seed ()"
Seed the random number generator in order to generate new noise\&. 
.PP
Definition at line 126 of file perlinNoise_impl\&.h\&.
.SS "template<typename num_t > void \fBls::math::perlinNoise_t\fP< num_t >::seed (unsigned longs)"
Seed the random number generator in order to generate new noise\&.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP A long, unsigned integral value that will be used to seed the random number generator\&. 
.RE
.PP

.PP
Definition at line 100 of file perlinNoise_impl\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
