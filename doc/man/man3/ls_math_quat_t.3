.TH "ls::math::quat_t< num_t >" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::math::quat_t< num_t > \- 
.PP
Quaternion Structure\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <quat\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBquat_t\fP (num_t inX, num_t inY, num_t inZ, num_t inW)"
.br
.ti -1c
.RI "constexpr \fBquat_t\fP ()"
.br
.ti -1c
.RI "constexpr \fBquat_t\fP (num_t n)"
.br
.ti -1c
.RI "constexpr \fBquat_t\fP (const \fBquat_t\fP< num_t > &input)"
.br
.ti -1c
.RI "constexpr \fBquat_t\fP (\fBquat_t\fP< num_t > &&input)"
.br
.ti -1c
.RI "\fB~quat_t\fP ()=default"
.br
.ti -1c
.RI "template<typename other_t > constexpr \fBoperator quat_t< other_t >\fP () const "
.br
.ti -1c
.RI "const num_t * \fBoperator&\fP () const "
.br
.ti -1c
.RI "num_t * \fBoperator&\fP ()"
.br
.ti -1c
.RI "constexpr num_t \fBoperator[]\fP (int i) const "
.br
.ti -1c
.RI "num_t & \fBoperator[]\fP (int i)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator--\fP (int)"
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator+\fP (const \fBquat_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator-\fP (const \fBquat_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator*\fP (const \fBquat_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator=\fP (const \fBquat_t\fP< num_t > &input)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator=\fP (\fBquat_t\fP< num_t > &&input)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator+=\fP (const \fBquat_t\fP< num_t > &input)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator-=\fP (const \fBquat_t\fP< num_t > &input)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator*=\fP (const \fBquat_t\fP< num_t > &input)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBquat_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBquat_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator+\fP (num_t) const "
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator-\fP (num_t) const "
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator*\fP (num_t) const "
.br
.ti -1c
.RI "\fBquat_t\fP \fBoperator/\fP (num_t) const "
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator=\fP (num_t)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator+=\fP (num_t)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator-=\fP (num_t)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator*=\fP (num_t)"
.br
.ti -1c
.RI "\fBquat_t\fP & \fBoperator/=\fP (num_t)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "num_t \fBq\fP [4]"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename num_t>struct ls::math::quat_t< num_t >"
Quaternion Structure\&. 


.PP
 Recommended for use with non-integral types
.PP
\fBNote:\fP
.RS 4
Indexing is as follows: 0 = X 1 = Y 2 = Z 
.SS "3 = W (real component) "
.RE
.PP

.PP
Definition at line 24 of file quat\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename num_t > constexpr \fBls::math::quat_t\fP< num_t >::\fBquat_t\fP (num_tinX, num_tinY, num_tinZ, num_tinW)"

.PP
Definition at line 25 of file quat_impl\&.h\&.
.SS "template<typename num_t > constexpr \fBls::math::quat_t\fP< num_t >::\fBquat_t\fP ()"

.PP
Definition at line 30 of file quat_impl\&.h\&.
.SS "template<typename num_t > constexpr \fBls::math::quat_t\fP< num_t >::\fBquat_t\fP (num_tn)"

.PP
Definition at line 35 of file quat_impl\&.h\&.
.SS "template<typename num_t > constexpr \fBls::math::quat_t\fP< num_t >::\fBquat_t\fP (const \fBquat_t\fP< num_t > &input)"

.PP
Definition at line 40 of file quat_impl\&.h\&.
.SS "template<typename num_t > constexpr \fBls::math::quat_t\fP< num_t >::\fBquat_t\fP (\fBquat_t\fP< num_t > &&input)"

.PP
Definition at line 45 of file quat_impl\&.h\&.
.SS "template<typename num_t> \fBls::math::quat_t\fP< num_t >::~\fBquat_t\fP ()\fC [default]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename num_t > template<typename other_t > constexpr \fBls::math::quat_t\fP< num_t >::operator \fBquat_t\fP< other_t > () const\fC [explicit]\fP"

.PP
Definition at line 54 of file quat_impl\&.h\&.
.SS "template<typename num_t > bool \fBls::math::quat_t\fP< num_t >::operator!= (const \fBquat_t\fP< num_t > &input) const\fC [inline]\fP"

.PP
Definition at line 195 of file quat_impl\&.h\&.
.SS "template<typename num_t > const num_t * \fBls::math::quat_t\fP< num_t >::operator& () const"

.PP
Definition at line 61 of file quat_impl\&.h\&.
.SS "template<typename num_t > num_t * \fBls::math::quat_t\fP< num_t >::operator& ()\fC [inline]\fP"

.PP
Definition at line 66 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator* (const \fBquat_t\fP< num_t > &input) const\fC [inline]\fP"

.PP
Definition at line 135 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator* (num_tinput) const\fC [inline]\fP"

.PP
Definition at line 227 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator*= (const \fBquat_t\fP< num_t > &input)\fC [inline]\fP"

.PP
Definition at line 181 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator*= (num_tinput)\fC [inline]\fP"

.PP
Definition at line 274 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator+ (const \fBquat_t\fP< num_t > &input) const\fC [inline]\fP"

.PP
Definition at line 115 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator+ (num_tinput) const\fC [inline]\fP"

.PP
Definition at line 207 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator++ ()\fC [inline]\fP"

.PP
Definition at line 88 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator++ (int)\fC [inline]\fP"

.PP
Definition at line 101 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator+= (const \fBquat_t\fP< num_t > &input)\fC [inline]\fP"

.PP
Definition at line 163 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator+= (num_tinput)\fC [inline]\fP"

.PP
Definition at line 256 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator- (const \fBquat_t\fP< num_t > &input) const\fC [inline]\fP"

.PP
Definition at line 125 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator- (num_tinput) const\fC [inline]\fP"

.PP
Definition at line 217 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator-- ()\fC [inline]\fP"

.PP
Definition at line 94 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator-- (int)\fC [inline]\fP"

.PP
Definition at line 108 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator-= (const \fBquat_t\fP< num_t > &input)\fC [inline]\fP"

.PP
Definition at line 172 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator-= (num_tinput)\fC [inline]\fP"

.PP
Definition at line 265 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > \fBls::math::quat_t\fP< num_t >::operator/ (num_tinput) const\fC [inline]\fP"

.PP
Definition at line 237 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator/= (num_tinput)\fC [inline]\fP"

.PP
Definition at line 283 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator= (const \fBquat_t\fP< num_t > &input)\fC [inline]\fP"

.PP
Definition at line 145 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator= (\fBquat_t\fP< num_t > &&input)\fC [inline]\fP"

.PP
Definition at line 154 of file quat_impl\&.h\&.
.SS "template<typename num_t > \fBquat_t\fP< num_t > & \fBls::math::quat_t\fP< num_t >::operator= (num_tinput)\fC [inline]\fP"

.PP
Definition at line 247 of file quat_impl\&.h\&.
.SS "template<typename num_t > bool \fBls::math::quat_t\fP< num_t >::operator== (const \fBquat_t\fP< num_t > &input) const\fC [inline]\fP"

.PP
Definition at line 186 of file quat_impl\&.h\&.
.SS "template<typename num_t > constexpr num_t \fBls::math::quat_t\fP< num_t >::operator[] (inti) const"

.PP
Definition at line 74 of file quat_impl\&.h\&.
.SS "template<typename num_t > num_t & \fBls::math::quat_t\fP< num_t >::operator[] (inti)\fC [inline]\fP"

.PP
Definition at line 79 of file quat_impl\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename num_t> num_t \fBls::math::quat_t\fP< num_t >::q[4]"

.PP
Definition at line 26 of file quat\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
