.TH "ls::math::mat3_t< num_t >" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::math::mat3_t< num_t > \- 
.PP
3D Matrix Structure recommended for use with non-integral types  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mat3\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBmat3_t\fP (num_t inXX, num_t inXY, num_t inXZ, num_t inYX, num_t inYY, num_t inYZ, num_t inZX, num_t inZY, num_t inZZ)"
.br
.ti -1c
.RI "constexpr \fBmat3_t\fP ()"
.br
.ti -1c
.RI "constexpr \fBmat3_t\fP (num_t)"
.br
.ti -1c
.RI "constexpr \fBmat3_t\fP (const \fBmat3_t\fP< num_t > &)"
.br
.ti -1c
.RI "constexpr \fBmat3_t\fP (\fBmat3_t\fP< num_t > &&)"
.br
.ti -1c
.RI "constexpr \fBmat3_t\fP (const \fBvec3_t\fP< num_t > &x, const \fBvec3_t\fP< num_t > &y, const \fBvec3_t\fP< num_t > &z)"
.br
.ti -1c
.RI "\fB~mat3_t\fP ()=default"
.br
.ti -1c
.RI "template<typename other_t > constexpr \fBoperator mat3_t< other_t >\fP () const "
.br
.ti -1c
.RI "const \fBvec3_t\fP< num_t > & \fBoperator[]\fP (int i) const "
.br
.ti -1c
.RI "\fBvec3_t\fP< num_t > & \fBoperator[]\fP (int i)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator--\fP (int)"
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator+\fP (const \fBmat3_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator-\fP (const \fBmat3_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator-\fP () const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator*\fP (const \fBmat3_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator=\fP (const \fBmat3_t\fP< num_t > &input)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator=\fP (\fBmat3_t\fP< num_t > &&input)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator+=\fP (const \fBmat3_t\fP< num_t > &input)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator-=\fP (const \fBmat3_t\fP< num_t > &input)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator*=\fP (const \fBmat3_t\fP< num_t > &input)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBmat3_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBmat3_t\fP< num_t > &input) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator+\fP (const \fBvec3_t\fP< num_t > &) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator-\fP (const \fBvec3_t\fP< num_t > &) const "
.br
.ti -1c
.RI "\fBvec3_t\fP< num_t > \fBoperator*\fP (const \fBvec3_t\fP< num_t > &) const "
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator=\fP (const \fBvec3_t\fP< num_t > &)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator+=\fP (const \fBvec3_t\fP< num_t > &)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator-=\fP (const \fBvec3_t\fP< num_t > &)"
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator+\fP (num_t) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator-\fP (num_t) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator*\fP (num_t) const "
.br
.ti -1c
.RI "\fBmat3_t\fP \fBoperator/\fP (num_t) const "
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator=\fP (num_t)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator+=\fP (num_t)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator-=\fP (num_t)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator*=\fP (num_t)"
.br
.ti -1c
.RI "\fBmat3_t\fP & \fBoperator/=\fP (num_t)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBvec3_t\fP< num_t > \fBm\fP [3]"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename num_t>struct ls::math::mat3_t< num_t >"
3D Matrix Structure recommended for use with non-integral types 


.PP
 
.PP
\fBNote:\fP
.RS 4
Matrix is Row-Major Orientation is as follows: 0[0-2] = XX XY XZ 1[0-2] = YX YY YZ 
.SS "2[0-2] = ZX ZY ZZ "
.RE
.PP

.PP
Definition at line 24 of file mat3\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename num_t > constexpr \fBls::math::mat3_t\fP< num_t >::\fBmat3_t\fP (num_tinXX, num_tinXY, num_tinXZ, num_tinYX, num_tinYY, num_tinYZ, num_tinZX, num_tinZY, num_tinZZ)"

.PP
Definition at line 10 of file mat3_impl\&.h\&.
.SS "template<typename num_t> constexpr \fBls::math::mat3_t\fP< num_t >::\fBmat3_t\fP ()"

.SS "template<typename num_t> constexpr \fBls::math::mat3_t\fP< num_t >::\fBmat3_t\fP (num_t)"

.SS "template<typename num_t> constexpr \fBls::math::mat3_t\fP< num_t >::\fBmat3_t\fP (const \fBmat3_t\fP< num_t > &)"

.SS "template<typename num_t> constexpr \fBls::math::mat3_t\fP< num_t >::\fBmat3_t\fP (\fBmat3_t\fP< num_t > &&)"

.SS "template<typename num_t> constexpr \fBls::math::mat3_t\fP< num_t >::\fBmat3_t\fP (const \fBvec3_t\fP< num_t > &x, const \fBvec3_t\fP< num_t > &y, const \fBvec3_t\fP< num_t > &z)"

.SS "template<typename num_t> \fBls::math::mat3_t\fP< num_t >::~\fBmat3_t\fP ()\fC [default]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename num_t> template<typename other_t > constexpr \fBls::math::mat3_t\fP< num_t >::operator \fBmat3_t\fP< other_t > () const\fC [explicit]\fP"

.SS "template<typename num_t> bool \fBls::math::mat3_t\fP< num_t >::operator!= (const \fBmat3_t\fP< num_t > &input) const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator* (const \fBmat3_t\fP< num_t > &input) const"

.SS "template<typename num_t> \fBvec3_t\fP<num_t> \fBls::math::mat3_t\fP< num_t >::operator* (const \fBvec3_t\fP< num_t > &) const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator* (num_t) const"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator*= (const \fBmat3_t\fP< num_t > &input)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator*= (num_t)"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator+ (const \fBmat3_t\fP< num_t > &input) const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator+ (const \fBvec3_t\fP< num_t > &) const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator+ (num_t) const"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator++ ()"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator++ (int)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator+= (const \fBmat3_t\fP< num_t > &input)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator+= (const \fBvec3_t\fP< num_t > &)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator+= (num_t)"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator- (const \fBmat3_t\fP< num_t > &input) const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator- () const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator- (const \fBvec3_t\fP< num_t > &) const"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator- (num_t) const"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator-- ()"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator-- (int)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator-= (const \fBmat3_t\fP< num_t > &input)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator-= (const \fBvec3_t\fP< num_t > &)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator-= (num_t)"

.SS "template<typename num_t> \fBmat3_t\fP \fBls::math::mat3_t\fP< num_t >::operator/ (num_t) const"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator/= (num_t)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator= (const \fBmat3_t\fP< num_t > &input)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator= (\fBmat3_t\fP< num_t > &&input)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator= (const \fBvec3_t\fP< num_t > &)"

.SS "template<typename num_t> \fBmat3_t\fP& \fBls::math::mat3_t\fP< num_t >::operator= (num_t)"

.SS "template<typename num_t> bool \fBls::math::mat3_t\fP< num_t >::operator== (const \fBmat3_t\fP< num_t > &input) const"

.SS "template<typename num_t> const \fBvec3_t\fP<num_t>& \fBls::math::mat3_t\fP< num_t >::operator[] (inti) const\fC [inline]\fP"

.SS "template<typename num_t> \fBvec3_t\fP<num_t>& \fBls::math::mat3_t\fP< num_t >::operator[] (inti)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename num_t> \fBvec3_t\fP<num_t> \fBls::math::mat3_t\fP< num_t >::m[3]"

.PP
Definition at line 26 of file mat3\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
