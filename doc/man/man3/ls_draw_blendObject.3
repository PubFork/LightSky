.TH "ls::draw::blendObject" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::draw::blendObject \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <blendObject\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBblendObject\fP ()=default"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "\fBblendObject\fP (const \fBblendObject\fP &)=default"
.br
.RI "\fICopy Constructor\&. \fP"
.ti -1c
.RI "\fBblendObject\fP (\fBblendObject\fP &&)=default"
.br
.RI "\fIMove Constructor\&. \fP"
.ti -1c
.RI "\fB~blendObject\fP ()=default"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "\fBblendObject\fP & \fBoperator=\fP (const \fBblendObject\fP &)=default"
.br
.RI "\fICopy Operator\&. \fP"
.ti -1c
.RI "\fBblendObject\fP & \fBoperator=\fP (\fBblendObject\fP &&)=default"
.br
.RI "\fIMove Operator\&. \fP"
.ti -1c
.RI "void \fBbind\fP () const "
.br
.ti -1c
.RI "void \fBunbind\fP () const "
.br
.RI "\fIDisable Blending in OpenGL\&. \fP"
.ti -1c
.RI "void \fBreset\fP ()"
.br
.ti -1c
.RI "void \fBsetState\fP (bool=GL_FALSE)"
.br
.ti -1c
.RI "bool \fBgetState\fP () const "
.br
.ti -1c
.RI "void \fBsetBlendEquation\fP (\fBblend_equ_t\fP rgbaMode=\fBLS_BLEND_ADD\fP)"
.br
.ti -1c
.RI "void \fBsetBlendEquation\fP (\fBblend_equ_t\fP rgbMode=\fBLS_BLEND_ADD\fP, \fBblend_equ_t\fP alphaMode=\fBLS_BLEND_ADD\fP)"
.br
.ti -1c
.RI "\fBblend_equ_t\fP \fBgetBlendEquationRgb\fP () const "
.br
.ti -1c
.RI "\fBblend_equ_t\fP \fBgetBlendEquationAlpha\fP () const "
.br
.ti -1c
.RI "void \fBsetBlendFunction\fP (\fBblend_func_t\fP srcFactor=\fBLS_ONE\fP, \fBblend_func_t\fP dstFactor=\fBLS_ZERO\fP)"
.br
.ti -1c
.RI "void \fBsetBlendFunction\fP (\fBblend_func_t\fP srcFactorRgb=\fBLS_ONE\fP, \fBblend_func_t\fP dstFactorRgb=\fBLS_ZERO\fP, \fBblend_func_t\fP srcFactorAlpha=\fBLS_ONE\fP, \fBblend_func_t\fP dstFactorAlpha=\fBLS_ZERO\fP)"
.br
.ti -1c
.RI "\fBblend_func_t\fP \fBgetBlendFunctionSrcRgb\fP () const "
.br
.ti -1c
.RI "\fBblend_func_t\fP \fBgetBlendFunctionSrcAlpha\fP () const "
.br
.ti -1c
.RI "\fBblend_func_t\fP \fBgetBlendFunctionDstRgb\fP () const "
.br
.ti -1c
.RI "\fBblend_func_t\fP \fBgetBlendFunctionDstAlpha\fP () const "
.br
.ti -1c
.RI "void \fBsetBlendColor\fP (const \fBcolor\fP &rgba=lsBlank)"
.br
.ti -1c
.RI "\fBcolor\fP \fBgetBlendColor\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
 
.SS "The blend object manages the current blend state within OpenGL\&. "

.PP
Definition at line 90 of file blendObject\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ls::draw::blendObject::blendObject ()\fC [default]\fP"

.PP
Constructor\&. Creates an \fBblendObject\fP using the default OpenGL blending parameters\&. 
.SS "ls::draw::blendObject::blendObject (const \fBblendObject\fP &)\fC [default]\fP"

.PP
Copy Constructor\&. Copies all data from the input parameter into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to another \fBblendObject\fP\&. 
.RE
.PP

.SS "ls::draw::blendObject::blendObject (\fBblendObject\fP &&)\fC [default]\fP"

.PP
Move Constructor\&. Moves all data from the input parameter into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to another \fBblendObject\fP\&. 
.RE
.PP

.SS "ls::draw::blendObject::~blendObject ()\fC [default]\fP"

.PP
Destructor\&. Does nothing\&. 
.SH "Member Function Documentation"
.PP 
.SS "void ls::draw::blendObject::bind () const"
Enable blending in OpenGL and apply all stored parameters (blending equations, functions, and color)\&. 
.PP
Definition at line 16 of file blendObject\&.cpp\&.
.SS "\fBcolor\fP ls::draw::blendObject::getBlendColor () const\fC [inline]\fP"
Get the current color that OpenGL is using for blending operations\&.
.PP
\fBReturns:\fP
.RS 4
a group of four floating-point numbers, representing the RGBA colors that OpenGL is using for blending\&. 
.RE
.PP

.PP
Definition at line 111 of file blendObject_impl\&.h\&.
.SS "\fBblend_equ_t\fP ls::draw::blendObject::getBlendEquationAlpha () const\fC [inline]\fP"
Get the blending equation for the alpha channel\&.
.PP
\fBReturns:\fP
.RS 4
blend_eq_t 
.RE
.PP

.PP
Definition at line 46 of file blendObject_impl\&.h\&.
.SS "\fBblend_equ_t\fP ls::draw::blendObject::getBlendEquationRgb () const\fC [inline]\fP"
Get the blending equation for the RGB channels\&.
.PP
\fBReturns:\fP
.RS 4
blend_eq_t 
.RE
.PP

.PP
Definition at line 39 of file blendObject_impl\&.h\&.
.SS "\fBblend_func_t\fP ls::draw::blendObject::getBlendFunctionDstAlpha () const\fC [inline]\fP"
Get the current blend function from the destination alpha channel
.PP
\fBReturns:\fP
.RS 4
blend_equ_color_t 
.RE
.PP

.PP
Definition at line 97 of file blendObject_impl\&.h\&.
.SS "\fBblend_func_t\fP ls::draw::blendObject::getBlendFunctionDstRgb () const\fC [inline]\fP"
Get the current blend function from the destination RGB channel
.PP
\fBReturns:\fP
.RS 4
blend_equ_color_t 
.RE
.PP

.PP
Definition at line 90 of file blendObject_impl\&.h\&.
.SS "\fBblend_func_t\fP ls::draw::blendObject::getBlendFunctionSrcAlpha () const\fC [inline]\fP"
Get the current blend function from the source alpha channel
.PP
\fBReturns:\fP
.RS 4
blend_equ_color_t 
.RE
.PP

.PP
Definition at line 83 of file blendObject_impl\&.h\&.
.SS "\fBblend_func_t\fP ls::draw::blendObject::getBlendFunctionSrcRgb () const\fC [inline]\fP"
Get the current blend function from the source RGB channel
.PP
\fBReturns:\fP
.RS 4
blend_equ_color_t 
.RE
.PP

.PP
Definition at line 76 of file blendObject_impl\&.h\&.
.SS "bool ls::draw::blendObject::getState () const\fC [inline]\fP"
Determine whether this blending object should tell OpenGL to enable or disable the use of blending\&.
.PP
\fBReturns:\fP
.RS 4
bool A boolean value that will determine if OpenGL should have blending enabled or disabled\&. 
.RE
.PP

.PP
Definition at line 17 of file blendObject_impl\&.h\&.
.SS "\fBblendObject\fP& ls::draw::blendObject::operator= (const \fBblendObject\fP &)\fC [default]\fP"

.PP
Copy Operator\&. Copies all data from the input parameter into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIAn\fP R-Value reference to another \fBblendObject\fP that is about to go out of scope\&. 
.RE
.PP

.SS "\fBblendObject\fP& ls::draw::blendObject::operator= (\fBblendObject\fP &&)\fC [default]\fP"

.PP
Move Operator\&. Copies all data from the input parameter into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIAn\fP R-Value reference to another \fBblendObject\fP that is about to go out of scope\&. 
.RE
.PP

.SS "void ls::draw::blendObject::reset ()"
Reset all currently held blend parameters to OpenGL's defaults\&. 
.PP
Definition at line 43 of file blendObject\&.cpp\&.
.SS "void ls::draw::blendObject::setBlendColor (const \fBcolor\fP &rgba = \fClsBlank\fP)\fC [inline]\fP"
Set the color that OpenGL should use for blending
.PP
\fBParameters:\fP
.RS 4
\fIrgba\fP A constant reference to an color that should be used during blending operations within OpenGL\&. 
.RE
.PP

.PP
Definition at line 104 of file blendObject_impl\&.h\&.
.SS "void ls::draw::blendObject::setBlendEquation (\fBblend_equ_t\fPrgbaMode = \fC\fBLS_BLEND_ADD\fP\fP)\fC [inline]\fP"
Set the blending equation to be used within OpenGL\&.
.PP
\fBParameters:\fP
.RS 4
\fIrgbaMode\fP The blend equation that OpenGL should use internally\&. 
.RE
.PP

.PP
Definition at line 24 of file blendObject_impl\&.h\&.
.SS "void ls::draw::blendObject::setBlendEquation (\fBblend_equ_t\fPrgbMode = \fC\fBLS_BLEND_ADD\fP\fP, \fBblend_equ_t\fPalphaMode = \fC\fBLS_BLEND_ADD\fP\fP)\fC [inline]\fP"
Set the OpenGL blending equation, but with different values for RGB and Alpha\&.
.PP
\fBParameters:\fP
.RS 4
\fIrgbMode\fP The RGB blending equation
.br
\fIalphaMode\fP The blending equation for the alpha channel\&. 
.RE
.PP

.PP
Definition at line 31 of file blendObject_impl\&.h\&.
.SS "void ls::draw::blendObject::setBlendFunction (\fBblend_func_t\fPsrcFactor = \fC\fBLS_ONE\fP\fP, \fBblend_func_t\fPdstFactor = \fC\fBLS_ZERO\fP\fP)\fC [inline]\fP"
Set the source and destination blending function\&.
.PP
\fBParameters:\fP
.RS 4
\fIsrcFactor\fP The blending function for the source RGBA channels\&.
.br
\fIdstFactor\fP The blending equation for the destination RGBA channels\&. 
.RE
.PP

.PP
Definition at line 53 of file blendObject_impl\&.h\&.
.SS "void ls::draw::blendObject::setBlendFunction (\fBblend_func_t\fPsrcFactorRgb = \fC\fBLS_ONE\fP\fP, \fBblend_func_t\fPdstFactorRgb = \fC\fBLS_ZERO\fP\fP, \fBblend_func_t\fPsrcFactorAlpha = \fC\fBLS_ONE\fP\fP, \fBblend_func_t\fPdstFactorAlpha = \fC\fBLS_ZERO\fP\fP)\fC [inline]\fP"
Set the source and destination blending function, with separate RGB and alpha functions\&.
.PP
\fBParameters:\fP
.RS 4
\fIsrcFactorRgb\fP The blending function for the source RGB channels\&.
.br
\fIdstFactorRgb\fP The blending equation for the destination RGB channels\&.
.br
\fIsrcFactorAlpha\fP The blending function for the source alpha channel\&.
.br
\fIdstFactorAlpha\fP The blending function for the destination alpha channel\&. 
.RE
.PP

.PP
Definition at line 63 of file blendObject_impl\&.h\&.
.SS "void ls::draw::blendObject::setState (boolstate = \fCGL_FALSE\fP)\fC [inline]\fP"
Set whether blending should be enabled or disabled in the current rendering state\&. If blending is disabled, no other blending parameters will be sent through the rendering pipeline\&.
.PP
\fBParameters:\fP
.RS 4
\fIbool\fP A boolean value that will determine if OpenGL should have blending enabled or disabled\&. 
.RE
.PP

.PP
Definition at line 9 of file blendObject_impl\&.h\&.
.SS "void ls::draw::blendObject::unbind () const"

.PP
Disable Blending in OpenGL\&. 
.PP
\fBNote:\fP
.RS 4
Don't use this function if another depth object is going to be bound immediately afterwards\&. Doing so may cause a redundant state change within OpenGL\&. 
.RE
.PP

.PP
Definition at line 34 of file blendObject\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
