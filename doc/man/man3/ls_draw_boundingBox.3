.TH "ls::draw::boundingBox" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::draw::boundingBox \- 
.PP
Bounding Box Class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <boundingBox\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBboundingBox\fP ()"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "\fBboundingBox\fP (const \fBboundingBox\fP &bb)"
.br
.RI "\fICopy Constructor\&. \fP"
.ti -1c
.RI "\fBboundingBox\fP (\fBboundingBox\fP &&)"
.br
.RI "\fIMove Constructor\&. \fP"
.ti -1c
.RI "\fB~boundingBox\fP ()=default"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "\fBboundingBox\fP & \fBoperator=\fP (const \fBboundingBox\fP &)"
.br
.RI "\fICopy Operator\&. \fP"
.ti -1c
.RI "\fBboundingBox\fP & \fBoperator=\fP (\fBboundingBox\fP &&)"
.br
.RI "\fIMove Operator\&. \fP"
.ti -1c
.RI "bool \fBisInBox\fP (const math::vec3 &) const "
.br
.RI "\fICheck if a point is within this box\&. \fP"
.ti -1c
.RI "bool \fBisInBox\fP (const \fBboundingBox\fP &) const "
.br
.ti -1c
.RI "void \fBsetTopRearRight\fP (const math::vec3 &)"
.br
.ti -1c
.RI "const math::vec3 & \fBgetTopRearRight\fP () const "
.br
.ti -1c
.RI "void \fBsetBotFrontLeft\fP (const math::vec3 &)"
.br
.ti -1c
.RI "const math::vec3 & \fBgetBotFrontLeft\fP () const "
.br
.ti -1c
.RI "void \fBresetSize\fP ()"
.br
.ti -1c
.RI "void \fBcompareAndUpdate\fP (const math::vec3 &point)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Bounding Box Class\&. 

The orientation for a bounding box follows OpenGL coordinates, where the positive XYZ coordinates point towards the top, right, front of the viewport\&. 
.PP
Definition at line 22 of file boundingBox\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ls::draw::boundingBox::boundingBox ()"

.PP
Constructor\&. 
.PP
Definition at line 18 of file boundingBox\&.cpp\&.
.SS "ls::draw::boundingBox::boundingBox (const \fBboundingBox\fP &bb)"

.PP
Copy Constructor\&. Copies data from another bounding box\&.
.PP
\fBParameters:\fP
.RS 4
\fIbb\fP A constant reference to a fully constructed bounding box object\&. 
.RE
.PP

.PP
Definition at line 24 of file boundingBox\&.cpp\&.
.SS "ls::draw::boundingBox::boundingBox (\fBboundingBox\fP &&bb)"

.PP
Move Constructor\&. Copies data from another bounding box (no moves are performed)\&.
.PP
\fBParameters:\fP
.RS 4
\fIAn\fP r-value reference to a fully constructed bounding box 
.RE
.PP

.PP
Definition at line 32 of file boundingBox\&.cpp\&.
.SS "ls::draw::boundingBox::~boundingBox ()\fC [default]\fP"

.PP
Destructor\&. Defaulted 
.SH "Member Function Documentation"
.PP 
.SS "void ls::draw::boundingBox::compareAndUpdate (const math::vec3 &point)"
Compare a point to the current set of vertices\&. If any of the components within the parameter are larger than the components of this box, the current set of points will be enlarged\&.
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP A point who's individual components should be used to update the size of this bounding box\&. 
.RE
.PP

.PP
Definition at line 82 of file boundingBox\&.cpp\&.
.SS "const math::vec3 & ls::draw::boundingBox::getBotFrontLeft () const\fC [inline]\fP"
Get the bottom, front, left point of this bounding box\&.
.PP
\fBReturns:\fP
.RS 4
A constant reference to the bottom, front, left point of this bounding box\&. 
.RE
.PP

.PP
Definition at line 36 of file boundingBox_impl\&.h\&.
.SS "const math::vec3 & ls::draw::boundingBox::getTopRearRight () const\fC [inline]\fP"
Get the top-rear-right point of this bounding box\&.
.PP
\fBReturns:\fP
.RS 4
A constant reference to the top, rear, right point of this bounding box\&. 
.RE
.PP

.PP
Definition at line 22 of file boundingBox_impl\&.h\&.
.SS "bool ls::draw::boundingBox::isInBox (const math::vec3 &v) const"

.PP
Check if a point is within this box\&. 
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to a vec3 object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if the point is within *this, or FALSE if otherwise\&. 
.RE
.PP

.PP
Definition at line 64 of file boundingBox\&.cpp\&.
.SS "bool ls::draw::boundingBox::isInBox (const \fBboundingBox\fP &bb) const\fC [inline]\fP"
Check if a portion of another bounding box is within *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to another bounding box\&.
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if a portion of the bounding box is within *this, or FALSE if it isn't\&. 
.RE
.PP

.PP
Definition at line 8 of file boundingBox_impl\&.h\&.
.SS "\fBboundingBox\fP & ls::draw::boundingBox::operator= (const \fBboundingBox\fP &bb)"

.PP
Copy Operator\&. Copies data from another bounding box\&.
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to a fully constructed bounding box object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A reference to *this\&. 
.RE
.PP

.PP
Definition at line 42 of file boundingBox\&.cpp\&.
.SS "\fBboundingBox\fP & ls::draw::boundingBox::operator= (\fBboundingBox\fP &&bb)"

.PP
Move Operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIAn\fP R-Value reference to a bounding box that is about to go out of scope\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A reference to *this\&. 
.RE
.PP

.PP
Definition at line 52 of file boundingBox\&.cpp\&.
.SS "void ls::draw::boundingBox::resetSize ()"
Reset the bounds of this bounding box to their default values\&. 
.PP
Definition at line 74 of file boundingBox\&.cpp\&.
.SS "void ls::draw::boundingBox::setBotFrontLeft (const math::vec3 &v)\fC [inline]\fP"
Set the bottom, front, left point of this bounding box\&.
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to a point that will be used as the bottom, front, left point of this bounding box\&. 
.RE
.PP

.PP
Definition at line 29 of file boundingBox_impl\&.h\&.
.SS "void ls::draw::boundingBox::setTopRearRight (const math::vec3 &v)\fC [inline]\fP"
Set the top-rear-right point of this bounding box\&.
.PP
\fBParameters:\fP
.RS 4
\fIA\fP constant reference to a point that will be used as the top, rear, right point of this bounding box\&. 
.RE
.PP

.PP
Definition at line 15 of file boundingBox_impl\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
