.TH "ls::draw::fontResource" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::draw::fontResource \- 
.PP
Font File loader\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <fontResource\&.h>\fP
.PP
Inherits \fBls::utils::resource\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBDEFAULT_FONT_SIZE\fP = 72 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBfontResource\fP ()"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "\fBfontResource\fP (const \fBfontResource\fP &)=delete"
.br
.ti -1c
.RI "\fBfontResource\fP (\fBfontResource\fP &&fr)"
.br
.RI "\fIMove Constructor\&. \fP"
.ti -1c
.RI "virtual \fB~fontResource\fP () override"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "\fBfontResource\fP & \fBoperator=\fP (const \fBfontResource\fP &)=delete"
.br
.RI "\fICopy Operator - DELETED\&. \fP"
.ti -1c
.RI "\fBfontResource\fP & \fBoperator=\fP (\fBfontResource\fP &&fr)"
.br
.RI "\fIMove Operator\&. \fP"
.ti -1c
.RI "bool \fBloadFile\fP (const std::string &filename, unsigned pixelSize)"
.br
.RI "\fILoad a font file\&. \fP"
.ti -1c
.RI "bool \fBloadFile\fP (const std::wstring &filename, unsigned pixelSize)"
.br
.RI "\fILoad a font file\&. \fP"
.ti -1c
.RI "virtual bool \fBloadFile\fP (const std::string &filename) override"
.br
.RI "\fILoad a font file\&. \fP"
.ti -1c
.RI "virtual bool \fBloadFile\fP (const std::wstring &filename) override"
.br
.RI "\fILoad a font file\&. \fP"
.ti -1c
.RI "virtual bool \fBsaveFile\fP (const std::string &filename) const override"
.br
.RI "\fISave a file\&. \fP"
.ti -1c
.RI "virtual void \fBunload\fP () override"
.br
.RI "\fIUnload\&. \fP"
.ti -1c
.RI "unsigned \fBgetFontSize\fP () const "
.br
.ti -1c
.RI "const \fBglyph\fP * \fBgetGlyphs\fP () const "
.br
.ti -1c
.RI "unsigned \fBgetNumGlyphs\fP () const "
.br
.ti -1c
.RI "math::vec2i \fBgetMaxGlyphSize\fP () const "
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBatlas\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Font File loader\&. 


.PP
 A font loader can load TTF and OTF fonts by proxy of the FreeType library\&. When using the \fBgetData()\fP method, the returned pointer should be type casted 
.SS "to 'const glyph*'\&. "

.PP
Definition at line 47 of file fontResource\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "anonymous enum : int"
Default font size (as DPI) of fonts loaded from a file\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDEFAULT_FONT_SIZE \fP\fP
.PP
Definition at line 55 of file fontResource\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ls::draw::fontResource::fontResource ()"

.PP
Constructor\&. Initialized all variables to 0 values\&. 
.PP
Definition at line 63 of file fontResource\&.cpp\&.
.SS "ls::draw::fontResource::fontResource (const \fBfontResource\fP &)\fC [delete]\fP"
Copy Constructor - DELETED 
.SS "ls::draw::fontResource::fontResource (\fBfontResource\fP &&fr)"

.PP
Move Constructor\&. Attempts to move all resources from the input argument into *this\&. No deletions are made\&.
.PP
\fBParameters:\fP
.RS 4
\fIfr\fP An r-value reference to another \fBfontResource\fP object\&. 
.RE
.PP

.PP
Definition at line 70 of file fontResource\&.cpp\&.
.SS "ls::draw::fontResource::~fontResource ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Destructor\&. Calls 'unload()' and releases all memory used by *this\&. 
.PP
Definition at line 79 of file fontResource\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "unsigned ls::draw::fontResource::getFontSize () const\fC [inline]\fP"
Get the size of the currently loaded fonts 
.PP
Definition at line 29 of file fontResource_impl\&.h\&.
.SS "const \fBglyph\fP * ls::draw::fontResource::getGlyphs () const\fC [inline]\fP"
Get the array of glyphs used by *this 
.PP
Definition at line 36 of file fontResource_impl\&.h\&.
.SS "math::vec2i ls::draw::fontResource::getMaxGlyphSize () const\fC [inline]\fP"
Get the size of the widest glyph 
.PP
Definition at line 50 of file fontResource_impl\&.h\&.
.SS "unsigned ls::draw::fontResource::getNumGlyphs () const\fC [inline]\fP"
Get the number of glyphs that have been loaded 
.PP
Definition at line 43 of file fontResource_impl\&.h\&.
.SS "bool ls::draw::fontResource::loadFile (const std::string &filename, unsignedpixelSize)"

.PP
Load a font file\&. This method will load a font file using a specified pixel size\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A c-style string containing the relative path name to a file that should be loaded into memory\&.
.br
\fIpixelSize\fP The size, in pixels, that each glyph should be\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the font was successfully loaded\&. False if not\&. 
.RE
.PP

.PP
Definition at line 126 of file fontResource\&.cpp\&.
.SS "bool ls::draw::fontResource::loadFile (const std::wstring &filename, unsignedpixelSize)\fC [inline]\fP"

.PP
Load a font file\&. This method will load a font file using a specified pixel size\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A c-style string containing the relative path name to a file that should be loaded into memory\&.
.br
\fIpixelSize\fP the size, in pixels, that each glyph should be\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the font was successfully loaded\&. False if not\&. 
.RE
.PP

.PP
Definition at line 8 of file fontResource_impl\&.h\&.
.SS "bool ls::draw::fontResource::loadFile (const std::string &filename)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Load a font file\&. This method will load a font file using the default font size\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A c-style string containing the relative path name to a file that should be loaded into memory\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the font was successfully loaded\&. False if not\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 22 of file fontResource_impl\&.h\&.
.SS "bool ls::draw::fontResource::loadFile (const std::wstring &filename)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Load a font file\&. This method will load a font file using the default font size\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A c-style string containing the relative path name to a file that should be loaded into memory\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the font was successfully loaded\&. False if not\&. 
.RE
.PP

.PP
Reimplemented from \fBls::utils::resource\fP\&.
.PP
Definition at line 15 of file fontResource_impl\&.h\&.
.SS "\fBfontResource\fP& ls::draw::fontResource::operator= (const \fBfontResource\fP &)\fC [delete]\fP"

.PP
Copy Operator - DELETED\&. 
.SS "\fBfontResource\fP & ls::draw::fontResource::operator= (\fBfontResource\fP &&fr)"

.PP
Move Operator\&. Attempts to move all resources from the input argument into *this\&. No copies are made\&.
.PP
\fBParameters:\fP
.RS 4
\fIfr\fP An r-value reference to another \fBfontResource\fP object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a reference to *this\&. 
.RE
.PP

.PP
Definition at line 86 of file fontResource\&.cpp\&.
.SS "bool ls::draw::fontResource::saveFile (const std::string &filename) const\fC [override]\fP, \fC [virtual]\fP"

.PP
Save a file\&. This method will save a font to a file indicated by the specified path name\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A string object containing the relative path name to a file that should be saved to the computer\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the file was successfully saved\&. False if not\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 288 of file fontResource\&.cpp\&.
.SS "void ls::draw::fontResource::unload ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Unload\&. Free all memory used by *this\&. 
.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 110 of file fontResource\&.cpp\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class \fBatlas\fP\fC [friend]\fP"

.PP
Definition at line 48 of file fontResource\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
