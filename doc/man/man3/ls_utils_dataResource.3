.TH "ls::utils::dataResource" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::utils::dataResource \- 
.PP
Basic memory object/file abstraction\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <dataResource\&.h>\fP
.PP
Inherits \fBls::utils::resource\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBdataResource\fP ()"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "\fBdataResource\fP (const \fBdataResource\fP &dr)"
.br
.RI "\fICopy constructor\&. \fP"
.ti -1c
.RI "\fBdataResource\fP (\fBdataResource\fP &&dr)"
.br
.RI "\fIMove Constructor\&. \fP"
.ti -1c
.RI "virtual \fB~dataResource\fP () override"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "\fBdataResource\fP & \fBoperator=\fP (const \fBdataResource\fP &dr)"
.br
.RI "\fICopy Operator\&. \fP"
.ti -1c
.RI "\fBdataResource\fP & \fBoperator=\fP (\fBdataResource\fP &&dr)"
.br
.RI "\fIMove operator\&. \fP"
.ti -1c
.RI "virtual bool \fBloadFile\fP (const std::string &filename) override"
.br
.ti -1c
.RI "virtual bool \fBsaveFile\fP (const std::string &filename) const override"
.br
.ti -1c
.RI "virtual void \fBunload\fP () override"
.br
.ti -1c
.RI "bool \fBsetData\fP (char *data, long size, bool copyMemory)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Basic memory object/file abstraction\&. 

The \fBdataResource\fP base class can be fully constructed and will load a complete file into RAM\&. When calling either openFile() or \fBsaveFile()\fP using a wide character string, the function merely converts the wide string into a multi-byte character string, then delegates the rest of the file operation to the c-string openFile/closeFile methods\&. This means that if this class is derived from, there is little need to overload the wide-string methods\&. 
.PP
Definition at line 30 of file dataResource\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ls::utils::dataResource::dataResource ()"

.PP
Constructor\&. Initializes all members in *this and in the base resource class\&. 
.PP
Definition at line 22 of file dataResource\&.cpp\&.
.SS "ls::utils::dataResource::dataResource (const \fBdataResource\fP &dr)"

.PP
Copy constructor\&. Attempts to copy all data from the source operand into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIdr\fP A constant reference to another data resource\&. 
.RE
.PP

.PP
Definition at line 29 of file dataResource\&.cpp\&.
.SS "ls::utils::dataResource::dataResource (\fBdataResource\fP &&dr)"

.PP
Move Constructor\&. Move all memory from the source object into *this\&. No copies are performed during this operation\&.
.PP
\fBParameters:\fP
.RS 4
\fIdr\fP An r-value reference to another data resource\&. 
.RE
.PP

.PP
Definition at line 38 of file dataResource\&.cpp\&.
.SS "ls::utils::dataResource::~dataResource ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Destructor\&. Calls 'unload()' and releases all memory from *this\&. 
.PP
Definition at line 50 of file dataResource\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "bool ls::utils::dataResource::loadFile (const std::string &filename)\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBParameters:\fP
.RS 4
\fILoad\fP a file
.br
\fIfilename\fP A string object containing the relative path name to a file that should be loadable into memory\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the file was successfully loaded\&. False if not\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 89 of file dataResource\&.cpp\&.
.SS "\fBdataResource\fP & ls::utils::dataResource::operator= (const \fBdataResource\fP &dr)"

.PP
Copy Operator\&. Attempts to copy all data from the source operand into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIdr\fP A constant reference to another data resource\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a reference to *this\&. 
.RE
.PP

.PP
Definition at line 67 of file dataResource\&.cpp\&.
.SS "\fBdataResource\fP & ls::utils::dataResource::operator= (\fBdataResource\fP &&dr)"

.PP
Move operator\&. Move all memory from the source file object into *this\&. No copies are performed during this operation\&.
.PP
\fBParameters:\fP
.RS 4
\fIdr\fP An r-value reference to another data resource\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a reference to *this\&. 
.RE
.PP

.PP
Definition at line 75 of file dataResource\&.cpp\&.
.SS "bool ls::utils::dataResource::saveFile (const std::string &filename) const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBParameters:\fP
.RS 4
\fISave\fP a file
.br
\fIfilename\fP A string object containing the relative path name to a file that should be saved to the computer\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the file was successfully saved\&. False if not\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 140 of file dataResource\&.cpp\&.
.SS "bool ls::utils::dataResource::setData (char *data, longsize, boolcopyMemory)"
Copy data into *this\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP A pointer to some other data that will be copied into *this\&.
.br
\fIsize\fP The size, in bytes of the data being copied\&.
.br
\fIcopyMemory\fP Used to determine if the input data should be copied or moved into *this\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the copy was successful\&. False if otherwise\&. 
.RE
.PP

.PP
Definition at line 159 of file dataResource\&.cpp\&.
.SS "void ls::utils::dataResource::unload ()\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBParameters:\fP
.RS 4
\fIUnload\fP Free all memory used by *this\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 57 of file dataResource\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
