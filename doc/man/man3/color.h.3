.TH "C:/Users/miles/C++/projects/LightSky/lightsky/draw/color.h" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/miles/C++/projects/LightSky/lightsky/draw/color.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <GL/glew\&.h>\fP
.br
\fC#include 'lightsky/draw/setup\&.h'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBls\fP"
.br
.ti -1c
.RI " \fBls::draw\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef math::vec4_t< unsigned 
.br
char > \fBls::draw::colorub\fP"
.br
.ti -1c
.RI "typedef math::vec4_t< unsigned 
.br
short > \fBls::draw::colorus\fP"
.br
.ti -1c
.RI "typedef math::vec4_t< unsigned 
.br
int > \fBls::draw::colorui\fP"
.br
.ti -1c
.RI "typedef math::vec4_t< float > \fBls::draw::colorf\fP"
.br
.ti -1c
.RI "typedef colorf \fBls::draw::color\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBls::draw::color_type_t\fP : int { \fBls::draw::COLOR_TYPE_BYTE\fP = GL_BYTE, \fBls::draw::COLOR_TYPE_SHORT\fP = GL_SHORT, \fBls::draw::COLOR_TYPE_INT\fP = GL_INT, \fBls::draw::COLOR_TYPE_FLOAT\fP = GL_FLOAT, \fBls::draw::COLOR_TYPE_DOUBLE\fP = GL_DOUBLE, \fBls::draw::COLOR_TYPE_UNSIGNED_BYTE\fP = GL_UNSIGNED_BYTE, \fBls::draw::COLOR_TYPE_UNSIGNED_SHORT\fP = GL_UNSIGNED_SHORT, \fBls::draw::COLOR_TYPE_UNSIGNED_INT\fP = GL_UNSIGNED_INT, \fBls::draw::COLOR_TYPE_DEFAULT\fP = GL_UNSIGNED_BYTE, \fBls::draw::COLOR_TYPE_INVALID\fP = -1 }"
.br
.RI "\fIFramebuffer/Texture data types\&. \fP"
.ti -1c
.RI "enum \fBls::draw::pixel_layout_t\fP : int { \fBls::draw::LS_GRAY\fP = GL_DEPTH_COMPONENT, \fBls::draw::LS_R\fP = GL_RED, \fBls::draw::LS_RG\fP = GL_RG, \fBls::draw::LS_RGB\fP = GL_BGR, \fBls::draw::LS_RGBA\fP = GL_BGRA, \fBls::draw::LS_DEFAULT_PIXEL_LAYOUT\fP = GL_BGR, \fBls::draw::LS_INVALID_PIXEL_LAYOUT\fP = -1 }"
.br
.RI "\fIGPU-side pixel formats\&. \fP"
.ti -1c
.RI "enum \fBls::draw::pixel_format_t\fP : int { \fBls::draw::LS_GRAY_8\fP = GL_DEPTH_COMPONENT, \fBls::draw::LS_R_8\fP = GL_R8, \fBls::draw::LS_RG_8\fP = GL_RG8, \fBls::draw::LS_RGB_8\fP = GL_RGB8, \fBls::draw::LS_RGBA_8\fP = GL_RGBA8, \fBls::draw::LS_GRAY_16I\fP = GL_DEPTH_COMPONENT16, \fBls::draw::LS_R_16I\fP = GL_R16I, \fBls::draw::LS_RG_16I\fP = GL_RG16I, \fBls::draw::LS_RGB_16I\fP = GL_RGB16I, \fBls::draw::LS_RGBA_16I\fP = GL_RGBA16I, \fBls::draw::LS_GRAY_16U\fP = GL_DEPTH_COMPONENT16, \fBls::draw::LS_R_16U\fP = GL_R16UI, \fBls::draw::LS_RG_16U\fP = GL_RG16UI, \fBls::draw::LS_RGB_16U\fP = GL_RGB16UI, \fBls::draw::LS_RGBA_16U\fP = GL_RGBA16UI, \fBls::draw::LS_GRAY_32I\fP = GL_DEPTH_COMPONENT32, \fBls::draw::LS_R_32I\fP = GL_R32I, \fBls::draw::LS_RG_32I\fP = GL_RG32I, \fBls::draw::LS_RGB_32I\fP = GL_RGB32I, \fBls::draw::LS_RGBA_32I\fP = GL_RGBA32I, \fBls::draw::LS_GRAY_32U\fP = GL_DEPTH_COMPONENT32, \fBls::draw::LS_R_32U\fP = GL_R32UI, \fBls::draw::LS_RG_32U\fP = GL_RG32UI, \fBls::draw::LS_RGB_32U\fP = GL_RGB32UI, \fBls::draw::LS_RGBA_32U\fP = GL_RGBA32UI, \fBls::draw::LS_GRAY_16F\fP = GL_R16F, \fBls::draw::LS_R_8F\fP = GL_R16F, \fBls::draw::LS_RG_16F\fP = GL_RG16F, \fBls::draw::LS_RGB_16F\fP = GL_RGB16F, \fBls::draw::LS_RGBA_16F\fP = GL_RGBA16F, \fBls::draw::LS_GRAY_32F\fP = GL_DEPTH_COMPONENT32F, \fBls::draw::LS_R_32F\fP = GL_R32F, \fBls::draw::LS_RG_32F\fP = GL_RG32F, \fBls::draw::LS_RGB_32F\fP = GL_RGB32F, \fBls::draw::LS_RGBA_32F\fP = GL_RGBA32F, \fBls::draw::LS_SRGB\fP = GL_SRGB, \fBls::draw::LS_SRGB_8\fP = GL_SRGB8, \fBls::draw::LS_SRGBA\fP = GL_SRGB_ALPHA, \fBls::draw::LS_SRGBA_8\fP = GL_SRGB8_ALPHA8, \fBls::draw::LS_R_C\fP = GL_COMPRESSED_RED, \fBls::draw::LS_RG_C\fP = GL_COMPRESSED_RG, \fBls::draw::LS_RGB_C\fP = GL_COMPRESSED_RGB, \fBls::draw::LS_RGBA_C\fP = GL_COMPRESSED_RGBA, \fBls::draw::LS_DEFAULT_PIXEL_FORMAT\fP = GL_RGB, \fBls::draw::LS_INVALID_PIXEL_FORMAT\fP = -1 }"
.br
.RI "\fICPU-Side pixel formats\&. \fP"
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
