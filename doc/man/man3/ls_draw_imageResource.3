.TH "ls::draw::imageResource" 3 "Sun Oct 26 2014" "Version Pre-Alpha" "LightSky" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ls::draw::imageResource \- 
.PP
A resource object to load image files\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <imageResource\&.h>\fP
.PP
Inherits \fBls::utils::resource\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBimageResource\fP ()"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "\fBimageResource\fP (const \fBimageResource\fP &)=delete"
.br
.RI "\fICopy Constructor -- DELETED\&. \fP"
.ti -1c
.RI "\fBimageResource\fP (\fBimageResource\fP &&ir)"
.br
.RI "\fIMove Operator\&. \fP"
.ti -1c
.RI "virtual \fB~imageResource\fP ()"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "\fBimageResource\fP & \fBoperator=\fP (const \fBimageResource\fP &)=delete"
.br
.RI "\fICopy Operator -- DELETED\&. \fP"
.ti -1c
.RI "\fBimageResource\fP & \fBoperator=\fP (\fBimageResource\fP &&ir)"
.br
.RI "\fIMove Operator\&. \fP"
.ti -1c
.RI "virtual bool \fBloadFile\fP (const std::string &filename) override"
.br
.RI "\fILoad an image file\&. \fP"
.ti -1c
.RI "virtual bool \fBsaveFile\fP (const std::string &filename) const override"
.br
.RI "\fISave an image file\&. \fP"
.ti -1c
.RI "bool \fBsaveFile\fP (const std::string &filename, \fBimg_file_t\fP filetype) const "
.br
.RI "\fISave an image file in a specific format\&. \fP"
.ti -1c
.RI "virtual void \fBunload\fP () override"
.br
.RI "\fIUnload\&. \fP"
.ti -1c
.RI "virtual void * \fBgetData\fP () const override"
.br
.ti -1c
.RI "math::vec2i \fBgetPixelSize\fP () const "
.br
.ti -1c
.RI "\fBcolor_type_t\fP \fBgetPixelType\fP () const "
.br
.ti -1c
.RI "unsigned \fBgetBpp\fP () const "
.br
.ti -1c
.RI "\fBpixel_format_t\fP \fBgetInternalFormat\fP () const "
.br
.ti -1c
.RI "\fBpixel_layout_t\fP \fBgetExternalFormat\fP () const "
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A resource object to load image files\&. 


.PP
 This class can load images using the FreeImage library, The pData member contains raw texture data\&.
.PP
The inherited member 'pData' will be reinterpreted as a pointer to a 
.SS "FIBITMAP structure so as to make loading and saving easier to maintain\&. "

.PP
Definition at line 48 of file imageResource\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ls::draw::imageResource::imageResource ()"

.PP
Constructor\&. 
.PP
Definition at line 197 of file imageResource\&.cpp\&.
.SS "ls::draw::imageResource::imageResource (const \fBimageResource\fP &)\fC [delete]\fP"

.PP
Copy Constructor -- DELETED\&. 
.SS "ls::draw::imageResource::imageResource (\fBimageResource\fP &&ir)"

.PP
Move Operator\&. Moves data from the source operand into *this\&. No copies are performed\&.
.PP
\fBParameters:\fP
.RS 4
\fIir\fP An r-value reference to a temporary image resource object\&. 
.RE
.PP

.PP
Definition at line 204 of file imageResource\&.cpp\&.
.SS "ls::draw::imageResource::~imageResource ()\fC [virtual]\fP"

.PP
Destructor\&. Calls 'unload()' and releases all memory from *this\&. 
.PP
Definition at line 213 of file imageResource\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "unsigned ls::draw::imageResource::getBpp () const\fC [inline]\fP"
Get the number of bits per pixel in the image\&.
.PP
\fBReturns:\fP
.RS 4
0, 1, 2, 4, 8, 16, 24, 32, 48, 64, 96, or 128 
.RE
.PP

.PP
Definition at line 29 of file imageResource_impl\&.h\&.
.SS "void * ls::draw::imageResource::getData () const\fC [override]\fP, \fC [virtual]\fP"
Get the raw, loaded, image data contained within \fIthis\&. The underlying type has been cast from a FreeImage FIBITMAP\fP\&.
.PP
\fBReturns:\fP
.RS 4
a void pointer to the raw image bits\&. 
.RE
.PP

.PP
Reimplemented from \fBls::utils::resource\fP\&.
.PP
Definition at line 365 of file imageResource\&.cpp\&.
.SS "\fBpixel_layout_t\fP ls::draw::imageResource::getExternalFormat () const\fC [inline]\fP"
Get the OpenGL-compatible CPU-Side/GPU-Side image format pair\&.
.PP
\fBReturns:\fP
.RS 4
An enumeration containing image format information that can be used when setting up textures in OpenGL\&. 
.RE
.PP

.PP
Definition at line 43 of file imageResource_impl\&.h\&.
.SS "\fBpixel_format_t\fP ls::draw::imageResource::getInternalFormat () const\fC [inline]\fP"
Get the OpenGL-compatible CPU-Side image format\&.
.PP
\fBReturns:\fP
.RS 4
An enumeration containing image format information that can be used when setting up textures in OpenGL\&. 
.RE
.PP

.PP
Definition at line 36 of file imageResource_impl\&.h\&.
.SS "math::vec2i ls::draw::imageResource::getPixelSize () const\fC [inline]\fP"
Get the pixel size of the currently loaded image
.PP
\fBReturns:\fP
.RS 4
a 2D integer vector containing the width and height of the loaded image, in pixels\&. 
.RE
.PP

.PP
Definition at line 15 of file imageResource_impl\&.h\&.
.SS "\fBcolor_type_t\fP ls::draw::imageResource::getPixelType () const\fC [inline]\fP"
Get the format of the currently loaded image\&. For example, LS_UNSIGNED_BYTE, LS_INT, LS_FLOAT, etc\&. 
.PP
Definition at line 22 of file imageResource_impl\&.h\&.
.SS "bool ls::draw::imageResource::loadFile (const std::string &filename)\fC [override]\fP, \fC [virtual]\fP"

.PP
Load an image file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A string object containing the relative path name to a file that should be loadable into memory\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the file was successfully loaded\&. False if not\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 250 of file imageResource\&.cpp\&.
.SS "\fBimageResource\fP& ls::draw::imageResource::operator= (const \fBimageResource\fP &)\fC [delete]\fP"

.PP
Copy Operator -- DELETED\&. 
.SS "\fBimageResource\fP & ls::draw::imageResource::operator= (\fBimageResource\fP &&ir)"

.PP
Move Operator\&. Moves all data from the source operand into *this\&. No copies are performed\&.
.PP
\fBParameters:\fP
.RS 4
\fIir\fP An r-value reference to a temporary image resource object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a reference to *this\&. 
.RE
.PP

.PP
Definition at line 220 of file imageResource\&.cpp\&.
.SS "bool ls::draw::imageResource::saveFile (const std::string &filename) const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Save an image file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A string object containing the relative path name to a file that should be saved to the computer\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the file was successfully saved\&. False if not\&. 
.RE
.PP

.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 8 of file imageResource_impl\&.h\&.
.SS "bool ls::draw::imageResource::saveFile (const std::string &filename, \fBimg_file_t\fPfiletype) const"

.PP
Save an image file in a specific format\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP A string object containing the relative path name to a file that should be saved to the computer\&.
.br
\fIfiletype\fP An img_file_t, representing the file format that should be used when saving image data\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the file was successfully saved\&. False if not\&. 
.RE
.PP

.PP
Definition at line 335 of file imageResource\&.cpp\&.
.SS "void ls::draw::imageResource::unload ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Unload\&. Free all memory used by *this\&. 
.PP
Implements \fBls::utils::resource\fP\&.
.PP
Definition at line 316 of file imageResource\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for LightSky from the source code\&.
